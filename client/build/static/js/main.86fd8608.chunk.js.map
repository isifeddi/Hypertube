{"version":3,"sources":["image/default.jpg","image/404.png","actions/logoutAction.js","actions/notifAction.js","components/NavBar/index.js","components/commun/menu.js","components/Notif/index.js","containers/Navbar/index.js","components/Footer/index.js","components/commun/TextField.js","components/commun/flash.js","components/Register/index.js","actions/registerAction.js","containers/Register/index.js","components/Browse/viewProfile.js","components/Browse/index.js","actions/addInfoAction.js","actions/userAction.js","actions/resetStateAction.js","components/commun/modal.js","components/Browse/vP.js","containers/Browse/index.js","components/Login/index.js","containers/Login/index.js","actions/loginAction.js","components/NotFoundPage/index.js","actions/resetPasswordAction.js","components/SendEmail/index.js","containers/sendEmail/index.js","components/emailConfirmation/index.js","containers/emailConfirmation/index.js","components/resetPassword/index.js","containers/resetPassword/index.js","components/commun/RadioGroup.js","components/completeProfile/addInfo.js","components/commun/age.js","containers/completeProfile/addInfo.js","components/completeProfile/pictures.js","actions/imagesAction.js","containers/completeProfile/pictures.js","components/completeProfile/localisation.js","containers/completeProfile/localisation.js","components/completeProfile/stepper.js","containers/completeProfile/stepper.js","actions/stepperAction.js","components/Profile/viewProfile.js","containers/Profile/viewProfile.js","components/Profile/maps.js","containers/Profile/maps.js","components/Profile/profileInfo.js","containers/Profile/profileInfo.js","actions/profileAction.js","components/Profile/index.js","containers/Profile/index.js","components/Activity/index.js","containers/Activity/index.js","components/Chat/index.js","actions/chatAction.js","socketConn.js","containers/Chat/index.js","containers/Notif/index.js","Routes/Routes.js","App.js","serviceWorker.js","sagas/registerSaga.js","sagas/helper.js","sagas/loginSaga.js","sagas/logoutSaga.js","sagas/resetPasswordSaga.js","sagas/addInfoSaga.js","sagas/imagesSaga.js","sagas/stepperSaga.js","sagas/usersSaga.js","sagas/profileSaga.js","sagas/chatSaga.js","sagas/notifSaga.js","sagas/index.js","reducers/registerReducer.js","reducers/loginReducer.js","reducers/resetPasswordReducer.js","reducers/addInfoReducer.js","reducers/imagesReducers.js","reducers/userReducer.js","reducers/usersReducer.js","reducers/blockList.js","reducers/likeList.js","reducers/likedByList.js","reducers/chatReducer.js","reducers/notifReducer.js","reducers/viewProfileList.js","reducers/index.js","store.js","index.js"],"names":["module","exports","LOGOUT_USER","OpenNotifSuccess","NewNotif","data","GetNotif","useStyles","makeStyles","theme","root","display","marginBottom","spacing","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","backgroundColor","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","title","flexGrow","notif","margin","NavBar","props","unseenNotif","user","handleLogout","handleNotifListOpen","loggedInMenu","icon","color","completeProfile","loggedOutMenu","menu","token","complete","classes","useTheme","React","useState","open","setOpen","ClickAwayListener","onClickAway","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","to","style","textDecoration","aria-haspopup","Badge","badgeContent","Button","Drawer","anchor","paper","direction","Divider","List","map","item","path","key","text","ListItem","button","ListItemIcon","ListItemText","primary","MyMenu","handleClose","state","children","id","anchorEl","keepMounted","onClose","elevation","PaperProps","maxHeight","marginTop","maxWidth","overflow","large","height","Notif","notifList","Grid","container","justify","component","align","length","value","index","ListItemAvatar","Avatar","alt","src","by","profilePic","content","mapDispatchToProps","connect","notifications","stateProps","dispatchProps","otherProps","logoutAction","openNotif","setState","i","forEach","e","seen","currentTarget","borderTop","textAlign","left","bottom","phantom","Copyright","href","Date","getFullYear","Footer","renderField","input","label","meta","touched","error","custom","TextField","helperText","fullWidth","MyFlash","msg","enqueueSnackbar","useSnackbar","useEffect","element","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","maxSnack","flexDirection","form","submit","palette","secondary","main","avatar","Register","handleSubmit","status","err","Container","xs","sm","Field","name","type","rows","CircularProgress","inscriptionUserSuccess","inscriptionError","dataInsc","connectedRegisterContainer","register","registerStatus","registerAction","RegisterContainer","reduxForm","validate","values","errors","field","trim","username","test","email","password","confirmPassword","boxShadow","card","borderRadius","cardMedia","cardHeader","cardContent","cardAction","avatarON","avatarOF","ViewProfile","images","interests","handleBlock","handleLike","handleDislike","handleViewProfile","rating","Card","CardHeader","action","Box","mb","borderColor","rating1","Rating","precision","readOnly","isOnline","firstname","lastname","subheader","lastSignIn","CardMedia","tile","isProfilePic","defaultImg","CardContent","age","CardActions","like","Tooltip","flexWrap","background","border","TitlebarGridList","selectOptions","handle","users","handleChangeAge","handleChangeLoc","handleChangeRating","handleChangeTags","handleChangeNbrTags","nbrTags","loc","customStyles","control","base","isFocused","menuList","overflowY","gutterBottom","Slider","onChange","valueLabelDisplay","aria-labelledby","step","marks","min","max","isMulti","isClearable","options","styles","isUsers","GridList","getOptions","getOptionsSuccess","createOption","option","createOptionSuccess","createOptionError","addInfoError","getLoc","addLocation","addLocationSuccess","updateUserSuccess","getUsersSuccess","getUsersError","likeUser","liked_user_id","deleteUser","resetState","modal","shadows","outline","MyModal","isOpen","Modal","aria-describedby","Fade","in","chip","handleReport","params","Swiper","modules","Navigation","Pagination","pagination","el","clickable","navigation","nextEl","prevEl","spaceBetween","gender","sexOrient","Chip","bio","filtre","indice","blocked_user_id","dislike_user_id","reported_user_id","viewed_user_id","methode","route","addInfo","router","getUsers","blockUser","dislikeUser","reportUser","viewProfileUser","resetStateUsers","sortUsers","sort","setSort","suggestion","setSuggestion","setMethode","location","pathname","setIndice","setValueRating","setValueAge","setValueLoc","setValueNbrTags","tags","setValuetags","arrayTags","push","window","onscroll","ev","innerHeight","scrollY","document","body","offsetHeight","newValue","Login","registredStatus","connectedLoginContainer","login","loginAction","LoginContainer","NotFoundPage","img","SendEmailError","ResetPasswordError","ForgotPassword","cnForgotPasswordContainer","resetPassword","sendEmail","ForgotPasswordContainer","EmailConfirmation","EmailConfirmCont","componentDidMount","match","emailConfirm","this","Component","emailConfirmation","ResetPassword","resetPasswordStatus","resetError","connectedResetPasswordContainer","resetPasswordAction","ResetPasswordContainer","RadioGroup","hasError","o","Radio","checked","renderDatepicker","InputLabelProps","shrink","AddInfo","selectLoading","selectError","handleCreate","FormLabel","required","isDisabled","isLoading","onBlur","onCreateOption","Age","b","today","birthDate","m","getMonth","getDate","connectedAddInfoContainer","AddInfoContainer","destroyOnUnmount","birthday","initialValues","gridList","titleBar","delete","add","calcImages","Pictures","fileChangedHandler","deletePicture","setProfilePicture","accept","htmlFor","fontSize","cellHeight","isImages","GridListTile","GridListTileBar","actionPosition","actionIcon","titlePosition","getImages","user_id","imgId","sendImages","delImages","setProfilePic","event","files","target","formData","FormData","append","Localisation","userL","setLocation","isMarker","marker","setMarker","bootstrapURLKeys","center","lat","lng","defaultZoom","LocalisationContainer","userLocation","long","layout","minWidth","breakpoints","up","stepper","buttons","loading","back","grey","steps","Checkout","handleBack","handleNext","activeStep","Fragment","Paper","Step","StepLabel","Error","getStepContent","decStepper","incStepper","MapsContainer","ProfileInfo","profileInfoContainer","editInfo","root1","red","TabPanel","other","role","hidden","p","SimpleContainer","setValue","square","Tabs","indicatorColor","textColor","Tab","Activity","likedByList","viewProfileList","blockList","handleDeblock","likeList","ListItemSecondaryAction","deblocked_user_id","getLikedBy","getViewProfileList","getBlockUser","deblockUser","getLikeUser","dislikeUserAct","Conversations","handleSelectConversation","selected","conversations","ConvTitle","Messages","messages","Math","random","isMyMessage","image","message","SendMessage","handleSendMessage","dis","setMessage","onSubmit","preventDefault","cont","querySelector","scrollHeight","scrollTo","placeholder","disabled","Content","Object","keys","Chat","disable","getConverSuccess","LoadMessagesSuccess","conv_id","SendMessageError","socket","io","chat","selectedConversation","sendMsgSuccess","reset","getConversations","selectConversation","loadMessages","sendMessage","receiveMsg","on","receiver","current_notif","exact","Profile","CompleteProfile","loginContainer","Browse","App","store","dispatch","Boolean","hostname","inscription","axios","post","response","isValid","put","errUsername","errEmail","delay","takeLatest","request","config","call","emit","errorField","logoutRequest","select","console","log","resetPass","pass","c_pass","sendEmailS","sent","getSelectOptions","createSelectOption","act","created","add_Info","info","inter","added","uu","getLocation","AddLocation","getPictures","sendPictures","delPictures","img_id","Stepper","oldUsers","newUsers","us","concat","parseInt","edit_Info","result","valid","getConv","loadMsg","sendMsg","sender","reconnect","getNotif","resetNotif","all","fork","registerSaga","loginSaga","logoutSaga","resetPasswordSaga","addInfoSaga","imagesSaga","stepperSaga","usersSaga","profileSaga","chatSaga","notifSaga","DEFAULT_STATE","arr","j","splice","ele","k","unshift","combinedReducer","history","combineReducers","connectRouter","registerReducer","loginReducer","userReducer","usersReducer","resetPasswordReducer","addInfoReducer","imagesReducer","createBrowserHistory","sagaMiddleware","createSagaMiddleware","persistConfig","storage","whitelist","persistedReducer","persistReducer","rootReducer","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","routerMiddleware","run","rootSaga","configureStore","persistor","persistStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86fd8608.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.001d4596.jpg\";","module.exports = __webpack_public_path__ + \"static/media/404.45648724.png\";","export const LOGOUT_USER = \"LOGOUT_USER\";\n\nexport const CLEAR_USER_INFORMATION = \"CLEAR_USER_INFORMATION\";\n\nexport const LogoutAction = () => ({\n    \"type\": LOGOUT_USER\n});\n\nexport const ClearUserInformation = () => ({\n    \"type\": CLEAR_USER_INFORMATION\n});","export const OPEN_NOTIF = \"OPEN_NOTIF\";\n\nexport const OPEN_NOTIF_SUCCESS = \"OPEN_NOTIF_SUCCESS\";\n\nexport const NEW_NOTIF = \"NEW_NOTIF\";\n\nexport const GET_NOTIF = \"GET_NOTIF\";\n\nexport const GET_NOTIF_SUCCESS = \"GET_NOTIF_SUCCESS\";\n\nexport const OpenNotif = () => ({\n    \"type\": OPEN_NOTIF,\n});\n\nexport const OpenNotifSuccess = () => ({\n    \"type\": OPEN_NOTIF_SUCCESS,\n});\n\nexport const NewNotif = (data) => ({\n    \"type\": NEW_NOTIF,\n    data: data,\n});\n\nexport const GetNotif = () => ({\n    \"type\": GET_NOTIF,\n});\n\nexport const GetNotifSuccess = (notif) => ({\n    \"type\": GET_NOTIF_SUCCESS,\n    notif: notif,\n});","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {Link} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport PersonIcon from '@material-ui/icons/Person';\nimport HistoryIcon from '@material-ui/icons/History';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'relative',\n    marginBottom: theme.spacing(10),\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n     \n    }),\n    backgroundColor:\"#FFFFFF\"\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    \n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  title : {\n    flexGrow: 1,\n  },\n  notif: {\n    margin: 'auto'\n  },\n \n}));\n\nfunction NavBar(props) {\n  const {unseenNotif, user, handleLogout, handleNotifListOpen} = props;\n\n  const loggedInMenu = [\n    {\"text\" : \"Browse\",\"path\" : \"/browse\", icon: <AppsIcon color=\"secondary\"/>},\n    {\"text\" : \"Search\",\"path\" : \"/search\", icon: <SearchIcon color=\"secondary\"/>},\n    {\"text\" : \"Profile\",\"path\" : \"/profile\", icon: <PersonIcon color=\"secondary\"/>},\n    {\"text\" : \"Activity\",\"path\" : \"/activity\", icon: <HistoryIcon color=\"secondary\"/>},\n    {\"text\" : \"Friends\",\"path\" : \"/chat\", icon: <ChatIcon color=\"secondary\"/>},\n  ];\n  const completeProfile = [\n    {\"text\" : \"Complete Profile\", \"path\" : \"/completeProfile\", icon: <PersonIcon color=\"secondary\"/>},\n  ];\n  const loggedOutMenu = [\n    {\"text\" : \"Se connecter\",\"path\" : \"/login\", icon: <LockOpenIcon color=\"secondary\"/>},\n    {\"text\" : \"inscription\",\"path\" : \"/register\", icon: <LockOpenIcon color=\"secondary\"/>},\n  ];\n  let menu = [];\n  if(user && user.token)\n  {\n    if(user && user.complete === 3)\n      menu = loggedInMenu;\n    else\n      menu = completeProfile;\n  }\n  else\n    menu = loggedOutMenu;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n        \n      >\n        <Toolbar>\n          <IconButton\n            color=\"primary\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          \n          <Typography variant=\"h6\"  color=\"secondary\" className={classes.title}>\n              <Link to=\"/browse\" style={{textDecoration: 'none', color:'inherit'}}>\n                MATCHA\n              </Link>\n             \n          </Typography>\n\n          {user && user.token && <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-haspopup=\"true\"\n              onClick={handleNotifListOpen}\n              color=\"primary\"\n              className={classes.notif}\n            >\n              <Badge badgeContent={unseenNotif} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>}\n          \n          {user && user.token && <Button color=\"primary\" onClick={handleLogout}>Logout</Button>}\n        </Toolbar>\n      </AppBar>\n      \n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon color=\"primary\"/> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {menu.map((item) => (\n            <Link to={item.path} style={{textDecoration: 'none', color:'primary'}} key={item.text}>\n              <ListItem button>\n              <ListItemIcon>{item.icon}</ListItemIcon>\n                <ListItemText primary={item.text} />\n              </ListItem>\n            </Link>\n          ))}\n        </List>\n      </Drawer>\n    </div>\n    </ClickAwayListener>\n  );\n}\n\nexport default NavBar;","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\n\nconst MyMenu = (props) => {\n  const {handleClose, state, children} = props;\n  return (\n    <>\n      <Menu\n        id=\"custom-menu\"\n        anchorEl={state.anchor}\n        keepMounted\n        open={state.open}\n        onClose={handleClose}\n        elevation={10}\n        PaperProps={{\n          style: {\n            maxHeight: 520,\n            width: 360,\n            marginTop: 50,\n          },\n        }}\n      >\n        <div>\n            {children}\n        </div>\n      </Menu>\n    </>\n  );\n};\nexport default MyMenu;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Grid} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n   root: {\n    width: '100%',\n    maxWidth: 360,\n    position: 'relative',\n    overflow: 'auto',\n   },\n   large: {\n     width: 75,\n     height: 75,\n     margin: 10\n   },\n}));\n\nexport default function Notif(props) {\n   const classes = useStyles();\n    const {notifList} = props;\n   return (\n    <>\n    <Grid container justify=\"center\">\n        <List className={classes.root}>\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\" color='primary'>\n                Notifications\n            </Typography>\n            {notifList.length > 0 ? notifList.map((value, index) => (\n                <ListItem key={index} button>\n                    <ListItemAvatar>\n                        <Avatar\n                            className={classes.large}\n                            alt='Avatar'\n                            src={`http://localhost:5000/images/${value.by.profilePic}`}\n                        />\n                    </ListItemAvatar>\n                    <ListItemText>{value.content}</ListItemText>\n                </ListItem>\n            )) : <p>No notifications</p>}\n        </List>\n    </Grid>\n    </>\n    );\n}","import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {LogoutAction} from '../../actions/logoutAction';\nimport {OpenNotif} from '../../actions/notifAction';\nimport NavBar from '../../components/NavBar';\nimport MyMenu from '../../components/commun/menu';\nimport NotifList from \"../../components/Notif/index\";\n\nconst NavBarContainer = (props) => {\n    const {openNotif, user, handleLogout, notifList} = props;\n    const [state, setState] = useState({\n        open: false,\n    });\n    const handleNotifListOpen = (e) => {\n        openNotif();\n        setState({open: true, anchor: e.currentTarget});\n    }\n    const handleClose = () => {\n        setState({open: false, anchor: null});\n    }\n    let i = 0;\n    notifList && notifList.forEach(e => {\n        if(e.seen === 0)\n            i++;\n    });\n    return(\n        <>\n            <NavBar unseenNotif={i} handleLogout={handleLogout} user={user} handleNotifListOpen={handleNotifListOpen}/>\n            <MyMenu  state={state} handleClose={handleClose}>\n                <NotifList notifList={notifList}/>\n            </MyMenu>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"user\" : state.user,\n    \"notifList\": state.notif.notifications,\n});\nconst mapDispatchToProps = {\n    \"logoutAction\": LogoutAction,\n    \"openNotif\": OpenNotif,\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleLogout\" : () => {\n        dispatchProps.logoutAction();\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(NavBarContainer);\n ","import React from 'react';\nimport Hink from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nvar style = {\n  backgroundColor: \"#FFFFFF\",\n  borderTop: \"3px solid #E7E7E7\",\n  textAlign: \"center\",\n  padding: \"20px\",\n  position: \"fixed\",\n  left: \"0\",\n  bottom: \"0\",\n  height: \"60px\",\n  width: \"100%\",\n}\n\nvar phantom = {\n  display: 'block',\n  padding: '20px',\n  height: '60px',\n  width: '100%',\n}\n\nconst Copyright = () => {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n          {'Copyright © '}\n          <Hink color=\"inherit\" href=\"#\">\n            MATCHA\n          </Hink>{' '}\n          {new Date().getFullYear()}\n          {'.'}\n        </Typography>\n    );\n}\n\nconst Footer = () => {\n  return(\n    <div>\n      <div style={phantom}/>\n      <div style={style}>\n        <Copyright />\n      </div>  \n    </div>      \n  );\n}\n\nexport default Footer;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst renderField = ({\n    input,\n    label,\n    meta: { touched, error },\n    ...custom\n  }) => (\n    <TextField\n    label = {label}\n    helperText={touched && error}\n    error={touched && (error ? true : false)}\n    variant=\"outlined\"\n    fullWidth\n    {...input}\n    {...custom}\n    />\n  );\nexport default renderField","import React, {useEffect} from \"react\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\n\nfunction MyFlash(props) {\n    const {msg, variant} = props;\n    const { enqueueSnackbar } = useSnackbar();\n    useEffect(() => {\n        if(msg && variant)\n            msg.forEach(element => {\n                enqueueSnackbar(element, { variant: variant });\n            });\n    }, [])\n    return(<></>);\n}\n\nexport default function Snackbar(props){\n    return(\n        <SnackbarProvider\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            style={{marginTop: '49px'}}\n            autoHideDuration={4000}\n            maxSnack={5}\n        >\n            <MyFlash msg={props.msg} variant={props.variant}/>\n        </SnackbarProvider>\n    );\n};","import React  from 'react';\nimport { Field} from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport {Link} from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport renderField from '../commun/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MyFlash from '../commun/flash';\n\nconst useStyles = makeStyles(theme => ({\n  \n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: theme.palette.secondary.main\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\n\nconst Register = (props) => {\n  const {handleSubmit, status, err} = props;\n  const classes = useStyles();\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n    {status === \"error\" && <MyFlash variant=\"error\" msg={[err]}/>}\n    {status !== \"loading\" && \n    <div className={classes.paper}> \n      <Avatar className={classes.avatar}>\n            <LockRoundedIcon/>\n          </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\n          Sign up\n        </Typography>\n        <form  className={classes.form}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n            <Field\n                            name=\"firstname\"\n                            component={renderField}\n                            label=\"Firstname\"\n                            type = \"text\"\n                            rows='1'\n            />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n            <Field\n                            name=\"lastname\"\n                            component={renderField}\n                            label=\"Lastname\"\n                            type = \"text\"\n                            rows='1'\n                       />\n            </Grid>\n            <Grid item xs={12}>\n            <Field\n                            name=\"username\"\n                            component={renderField}\n                            label=\"Username\"\n                            type = \"text\"\n                            rows='1'\n                            \n                       />\n            </Grid>\n            <Grid item xs={12}>\n            <Field\n                            name=\"email\"\n                            component={renderField}\n                            label=\"Email\"\n                            type = \"email\"\n                            rows='1'\n\n                       />\n            </Grid>\n            <Grid item xs={12}>\n            <Field\n                            name=\"password\"\n                            component={renderField}\n                            label=\"Password\"\n                            type=\"password\"\n                            rows='1'\n                       />\n            </Grid>\n            <Grid item xs={12}>\n            <Field\n                            name=\"confirmPassword\"\n                            component={renderField}\n                            label=\"ConfirmPassword\"\n                            type=\"password\"\n                            rows='1'\n                       />\n            </Grid>\n            <Grid item xs={12}>\n             \n              <Button  onClick={handleSubmit} className={classes.submit} fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" name=\"submit\" value=\"ok\" >Submit</Button>\n            </Grid>\n          </Grid>\n        </form>  \n          \n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" style={{textDecoration: 'none', color:'#3f51b5'}}>\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        \n      </div>}\n      {status === \"loading\" && <div className={classes.paper} style={{marginTop: \"300px\"}}><CircularProgress color=\"secondary\" /></div>}\n      \n    </Container>\n  );\n}\n\nexport default Register;\n","export const INSCRIPTION_USER = \"INSCRIPTION_USER\";\n\nexport const INSCRIPTION_USER_SUCCESS = \"INSCRIPTION_USER_SUCCESS\";\n\nexport const INSCRIPTION_USER_ERROR = \"INSCRIPTION_USER_ERROR\";\n\nexport const EMAIL_CONFIRMATION = \"EMAIL_CONFIRMATION\";\n\nexport const EMAIL_CONFIRMATION_SUCCESS = \"EMAIL_CONFIRMATION_SUCCESS\";\n\nexport const EMAIL_CONFIRMATION_ERROR = \"EMAIL_CONFIRMATION_ERROR\";\n\nexport const InscriptionAction = (dataInsc) => ({\n  \"type\": INSCRIPTION_USER,\n  \"data\": dataInsc\n});\n\nexport const inscriptionUserSuccess = (data) => ({\n    \"type\": INSCRIPTION_USER_SUCCESS,\n    data\n});\n\nexport const inscriptionError = (error) => ({\n    \"type\": INSCRIPTION_USER_ERROR,\n    error\n});\n\nexport const EmailConfirmationAction = (token) => ({\n  \"type\": EMAIL_CONFIRMATION,\n  'token': token\n});\n\nexport const EmailConfirmationSuccess = () => ({\n    \"type\": EMAIL_CONFIRMATION_SUCCESS,\n});\n\nexport const EmailConfirmationError = () => ({\n    \"type\": EMAIL_CONFIRMATION_ERROR,\n});","import Register from '../../components/Register';\nimport {InscriptionAction} from '../../actions/registerAction';\nimport {connect} from \"react-redux\";\nimport {reduxForm } from 'redux-form';\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        'firstname',\n        'lastname',\n        'username',\n        'email',\n        'password',\n        'confirmPassword',\n    ];\n\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n\n    if(values.username && !/^[a-z0-9_-]{2,20}$/.test(values.username))\n        errors.username = 'Username can contain 2-20 characters, letters (a-z), numbers, \"_\" and \"-\"';\n    if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email))\n        errors.email = \"Invalid email address !\";\n    if(values.password && !/\\d/.test(values.password))\n        errors.password = \"Password must contain a number !\"\n    else if(values.password && !/[A-Z]/.test(values.password))\n        errors.password = \"Password must contain an uppercase letter !\"\n    else if(values.password && !/[a-z]/.test(values.password))\n        errors.password = \"Password must contain a lowercase letter !\"\n    else if(values.password && !/[ !@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/.test(values.password))\n        errors.password = \"Password must contain a special character !\"\n    else if(values.password && !/[a-zA-Z0-9 !@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/? ]{8,20}/.test(values.password))\n        errors.password = \"Password must contain 8-20 characters !\"\n    if(values.confirmPassword && values.password !== values.confirmPassword)\n        errors.confirmPassword = \"Passwords does not match !\"\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"form\" : state.form,\n    \"status\" : state.register.registerStatus,\n    \"err\": state.register.error\n});\nconst mapDispatchToProps = {\n    \"registerAction\": InscriptionAction\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps)=> ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit((form)=>{\n        dispatchProps.registerAction(form);\n    })\n});\n\nconst connectedRegisterContainer = connect(mapStateToProps, mapDispatchToProps,mergeProps)(Register);\nconst RegisterContainer = reduxForm({\n    form : \"register\",\n    \"destroyOnUnmount\": true,  \n    validate,\n})(connectedRegisterContainer);\n\nexport default RegisterContainer;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\nimport defaultImg from '../../image/default.jpg';\nimport BlockIcon from '@material-ui/icons/Block';\nimport IconButton from '@material-ui/core/IconButton';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport SupervisedUserCircleOutlinedIcon from '@material-ui/icons/SupervisedUserCircleOutlined';\nimport SupervisedUserCircleRoundedIcon from '@material-ui/icons/SupervisedUserCircleRounded';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '10px',\n    boxShadow: 3,\n  },\n  card: {\n    maxWidth: 400,\n    maxHeight:550,\n    borderRadius : '20px',\n    backgroundColor: '#E6EAEA',\n  },\n  cardMedia : {\n    maxWidth: 400,\n    maxHeight : 250,\n  },\n  cardHeader : {\n    maxWidth: 400,\n    maxHeight : 150,\n  },\n  cardContent : {\n    maxWidth: 400,\n    maxHeight : 100,\n  },\n  cardAction : {\n    maxWidth: 400,\n    maxHeight : 50,\n  },\n  avatarON: {\n    backgroundColor: '#00FB0C',\n    width: 15,\n    height: 15,\n  },\n  avatarOF: {\n    backgroundColor: '#e42416',\n    width: 15,\n    height: 15,\n  },\n}));\n\nexport default function ViewProfile(props) {\n  const {user,images,interests,handleBlock,handleLike,handleDislike,handleViewProfile} = props;\n  const classes = useStyles();\n  const value = user.rating;\n\n  return (\n    <div className={classes.root}>\n    <Card className={classes.card}>\n      <CardHeader\n      className={classes.cardHeader}\n      action={ \n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n        <div className={classes.rating1}> \n          <Rating\n            name=\"read-only\"\n            value={value}\n            precision={0.1}\n            readOnly\n          />\n        </div>\n        </Box>\n        }\n        avatar={\n          <Avatar aria-label=\"recipe\" className={user.isOnline === 1 ? classes.avatarON : classes.avatarOF}></Avatar> \n        }\n        title={user.firstname +' ' +user.lastname}\n        subheader={user.isOnline === 1 ? 'Online' : 'Last seen' + user.lastSignIn}\n      >\n      </CardHeader>\n      <CardMedia\n        className={classes.cardMedia}\n        children={\n          images.length !== 0 ? images.map((tile) =>\n            <div key={tile.id}>\n              {tile.isProfilePic === 1 &&\n                <img style={{width: \"100%\",height:\"250px\"}} src={`http://localhost:5000/images/${tile.path}`} alt=\"images\"/>\n              }\n            </div>\n            ) : <img  style={{width: \"100%\",height:\"250px\"}} src={defaultImg} alt=\"images\"/>\n        }\n      />\n      <CardContent className={classes.cardContent}> \n        <Typography>\n          Age : {user.age}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.cardAction}>\n        {user.like === null &&\n          <Tooltip title =\"Like\"><IconButton aria-label=\"Like\" onClick={(e) => handleLike(user.id)}>\n            <FavoriteBorderIcon color=\"secondary\" />\n          </IconButton></Tooltip>\n        }\n        {user.like === 'iLike' &&\n          <Tooltip title =\"Unlike\"><IconButton aria-label=\"Unlike\"  onClick={(e) => handleDislike(user.id)}>\n            <FavoriteIcon  color=\"secondary\"/>\n          </IconButton></Tooltip>\n        }\n        {user.like === 'heLiked' &&\n          <Tooltip title =\"Like back\"><IconButton aria-label=\"Like back\"  onClick={(e) => handleLike(user.id)}>\n            <SupervisedUserCircleOutlinedIcon color=\"primary\"/>\n          </IconButton></Tooltip>\n        }\n        {user.like === 'match' &&\n          <Tooltip title =\"Unmatch\"><IconButton aria-label=\"Unmatch\"  onClick={(e) => handleDislike(user.id)}>\n            <SupervisedUserCircleRoundedIcon color=\"primary\"/>\n          </IconButton></Tooltip>\n        }\n        <Tooltip title =\"Block\"><IconButton aria-label=\"Block\"  onClick={(e) => handleBlock(user.id)}>\n          <BlockIcon  color=\"secondary\"/>\n        </IconButton></Tooltip>\n        <Tooltip title =\"View\"><IconButton aria-label=\"View\"  onClick={(e) => handleViewProfile(user,images,interests)}>\n          <VisibilityIcon  color=\"primary\"/>\n        </IconButton></Tooltip>\n        \n      </CardActions>\n    </Card> \n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport ViewProfile from './viewProfile';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Select from 'react-select';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    width:100,\n    backgroundColor: theme.palette.secondary.main\n  },\n  rating: {\n    maxWidth:400\n  },\n  margin: {\n    height: theme.spacing(3),\n  },\n  card:{\n    border: '2px solid',\n    borderColor: '#E6EAEA',\n  },\n  \n}));\n\nexport default function TitlebarGridList(props) {\n  const classes = useStyles();\n  const {selectOptions,handle, users,handleSubmit,handleBlock,handleLike,handleDislike,\n        handleViewProfile,handleChangeAge,handleChangeLoc,handleChangeRating,\n        handleChangeTags,handleChangeNbrTags,age,nbrTags,loc,rating} = props;\n  \n  const marks = [\n    {value: 0,label: '0'},{value: 0.5,label: '0.5'},{value: 1,label: '1'},{value: 1.5,label: '1.5'},\n    {value: 2,label: '2'},{value: 2.5,label: '2.5'},{value: 3,label: '3'},{value: 3.5,label: '3.5'},\n    {value: 4,label: '4'},{value: 4.5,label: '4.5'},{value: 5,label: '5'},\n  ];\n  const marksTags = [\n    {value: 0,label: '0'},{value: 1,label: '1'},{value: 2,label: '2'},\n    {value: 3,label: '3'},{value: 4,label: '4'},{value: 5,label: '5'}\n  ];\n  const customStyles = {\n    control: (base, state) => ({\n        ...base,\n        borderColor: state.isFocused ? \"#3f51b5\" : \"#3f51b5\",\n        boxShadow: state.isFocused ? null : null,\n      }),\n    menu: base => ({\n        ...base,\n        borderRadius: 0,\n        marginTop: 0,\n        backgroundColor: '#DBDFF',\n      }),\n    menuList: base => ({\n        ...base,\n        padding: 0,\n        height: '100px',\n        overflowY: 'scroll'\n      }),\n  };\n\n    return (\n      <>\n      <Card className={classes.card}>\n        <CardHeader title=\"FILTER\"  align=\"center\"/>\n        <CardContent>\n          <Grid container item justify=\"center\" spacing={2} xs={12}>\n            <Grid item xs={6} className={classes.rating}>\n              <div className={classes.margin} />\n              <Tooltip title =\"DESC\"><IconButton aria-label=\"View\"  onClick={(e) => handle(\"-rating\")}>\n                <KeyboardArrowDownIcon  color=\"primary\"/>\n              </IconButton></Tooltip>\n              <Tooltip title =\"ASC\"><IconButton aria-label=\"View\"  onClick={(e) => handle(\"rating\")}>\n                <ExpandLessIcon  color=\"primary\"/>\n              </IconButton></Tooltip>\n              <Typography id=\"range-slider1\" gutterBottom align=\"center\">\n                Rating\n              </Typography>\n              <Slider\n                value={rating}\n                onChange={handleChangeRating}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                step={0.2}\n                marks={marks}\n                min={0}\n                max={5}\n              /> \n            </Grid>\n\n            <Grid item xs={6} className={classes.rating}>\n              <div className={classes.margin} />\n              <Tooltip title =\"DESC\"><IconButton aria-label=\"View\"  onClick={(e) => handle(\"-age\")}>\n                <KeyboardArrowDownIcon  color=\"primary\"/>\n              </IconButton></Tooltip>\n              <Tooltip title =\"ASC\"><IconButton aria-label=\"View\"  onClick={(e) => handle(\"age\")}>\n                <ExpandLessIcon  color=\"primary\"/>\n              </IconButton></Tooltip>\n              <Typography id=\"range-slider2\" gutterBottom align=\"center\">\n                Age\n              </Typography>\n              <Slider\n                value={age}\n                onChange={handleChangeAge}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                step={1}\n                min={18}\n                max={120}\n              />\n            </Grid>\n\n            <Grid item xs={6} className={classes.rating}>\n              <div className={classes.margin} />\n              <Tooltip title =\"DESC\"><IconButton aria-label=\"View\"  onClick={(e) => handle(\"-distance\")}>\n                <KeyboardArrowDownIcon  color=\"primary\"/>\n              </IconButton></Tooltip>\n              <Tooltip title =\"ASC\"><IconButton aria-label=\"View\"  onClick={(e) => handle(\"distance\")}>\n                <ExpandLessIcon  color=\"primary\"/>\n              </IconButton></Tooltip>\n              <Typography id=\"range-slider3\" gutterBottom align=\"center\">\n                Localisation\n              </Typography>\n              <Slider\n                value={loc}\n                onChange={handleChangeLoc}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                step={1000}\n                min={0}\n                max={50000}\n              /> \n            </Grid>\n\n            <Grid item xs={6} className={classes.rating}>\n              <div className={classes.margin} />\n              <Tooltip title =\"DESC\"><IconButton aria-label=\"View\"  onClick={(e) => handle(\"-nbrTags\")}>\n                <KeyboardArrowDownIcon  color=\"primary\"/>\n              </IconButton></Tooltip>\n              <Tooltip title =\"ASC\"><IconButton aria-label=\"View\"  onClick={(e) => handle(\"nbrTags\")}>\n                <ExpandLessIcon  color=\"primary\"/>\n              </IconButton></Tooltip>\n              <Typography id=\"range-slider4\" gutterBottom align=\"center\">\n                Common tags\n              </Typography>\n              <Slider\n                value={nbrTags}\n                onChange={handleChangeNbrTags}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                step={1}\n                marks={marksTags}\n                min={0}\n                max={5}\n              /> \n            </Grid>\n\n            <Grid item xs={6} className={classes.rating}>\n              <div className={classes.margin} />\n              <Typography id=\"range-slider5\" gutterBottom align=\"center\">\n                Tags\n              </Typography>\n              <Select\n                  isMulti\n                  isClearable={false}\n                  onChange={handleChangeTags}\n                  options={selectOptions}\n                  styles={customStyles}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardActions>\n        <Button type=\"submit\" onClick={handleSubmit} color=\"primary\" className={classes.submit} fullWidth variant=\"contained\" >Send</Button>\n        </CardActions>\n      </Card>\n    <div className={classes.root}>\n          {users.isUsers === true && users.users && users.users.map(tile => (\n            <GridList key={tile.user.id}>\n              <ViewProfile key={tile.user.id}  user={tile.user} images={tile.images} interests={tile.interests}\n              handleBlock={handleBlock} handleLike={handleLike} handleViewProfile={handleViewProfile} handleDislike={handleDislike}/>\n            </GridList>\n          ))}\n          \n          {(users.isUsers === false || users.users === null || users.length === 0 )&& <p>No User Found</p>}\n      </div>\n    </>\n    );\n}","export const GET_OPTIONS = \"GET_OPTIONS\";\n\nexport const GET_OPTIONS_SUCCESS = \"GET_OPTIONS_SUCCESS\";\n\nexport const CREATE_OPTION = \"CREATE_OPTION\";\n\nexport const CREATE_OPTION_SUCCESS = \"CREATE_OPTION_SUCCESS\";\n\nexport const CREATE_OPTION_ERROR = \"CREATE_OPTION_ERROR\";\n\nexport const ADD_INFO = \"ADD_INFO\";\n\nexport const ADD_INFO_SUCCESS = \"ADD_INFO_SUCCESS\";\n\nexport const ADD_INFO_ERROR = \"ADD_INFO_ERROR\";\n\nexport const GET_LOC = \"GET_LOC\";\n\nexport const ADD_LOCATION = \"ADD_LOCATION\"\n\nexport const ADD_LOCATION_SUCCESS = \"ADD_LOCATION_SUCCESS\";\n\nexport const getOptions= () => ({\n  \"type\": GET_OPTIONS\n});\n\nexport const getOptionsSuccess = (options) => ({\n    \"type\": GET_OPTIONS_SUCCESS,\n    options\n});\n\nexport const createOption = (option) => ({\n  \"type\": CREATE_OPTION,\n  \"data\": { value: option, label: option }\n});\n\nexport const createOptionSuccess = (option) => ({\n  \"type\": CREATE_OPTION_SUCCESS,\n  option\n});\n\nexport const createOptionError = (error) => ({\n  \"type\": CREATE_OPTION_ERROR,\n  error\n});\n\nexport const addInfo = (data, id) => ({\n  \"type\": ADD_INFO,\n  \"data\": data,\n  \"id\": id,\n});\n\nexport const addInfoSuccess = (info) => ({\n  \"type\": ADD_INFO_SUCCESS,\n  \"info\": info\n});\n\nexport const addInfoError = (error) => ({             \n  \"type\": ADD_INFO_ERROR,\n  error\n});\n\nexport const getLoc = () => ({\n  \"type\": GET_LOC,\n});\n\nexport const addLocation = (loc) => ({\n  \"type\": ADD_LOCATION,\n  loc\n});\n\nexport const addLocationSuccess = (loc) => ({\n  \"type\": ADD_LOCATION_SUCCESS,\n  loc\n});","export const UPDATE_USER_SUCCESS = \"UPDATE_USER_SUCCESS\";\nexport const GET_USERS = \"GET_USERS\";\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\nexport const GET_USERS_ERROR = \"GET_USERS_ERROR\";\nexport const BLOCK_USER = \"BLOCK_USER\";\nexport const DEBLOCK_USER = \"DEBLOCK_USER\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const DELETE_BLOCK= \"DELETE_BLOCK\";\nexport const DELETE_LIKE= \"DELETE_LIKE\";\nexport const LIKE_USER = \"LIKE_USER\";\nexport const DISLIKE_USER = \"DISLIKE_USER\";\nexport const DISLIKE_USER_ACT = \"DISLIKE_USER_ACT\";\nexport const REPORT_USER = \"REPORT_USER\";\nexport const VIEW_PROFILE_USER = \"VIEW_PROFILE_USER\";\nexport const GET_BLOCK_USER = \"GET_BLOCK_USER\";\nexport const GET_BLOCK_USER_SUCCESS = \"GET_BLOCK_USER_SUCCESS\";\nexport const GET_LIKE_USER = \"GET_LIKE_USER\";\nexport const GET_LIKE_USER_SUCCESS = \"GET_LIKE_USER_SUCCESS\";\nexport const SORT_USERS = \"SORT_USERS\";\nexport const GET_VP_LIST = \"GET_VP_LIST\";\nexport const GET_VP_LIST_SUCCESS = \"GET_VP_LIST_SUCCESS\";\nexport const GET_LIKED_BY = \"GET_LIKED_BY\";\nexport const GET_LIKED_BY_SUCCESS = \"GET_LIKED_BY_SUCCESS\";\n\nexport const updateUserSuccess = (data) => ({\n    \"type\":  UPDATE_USER_SUCCESS,\n    data\n});\n\nexport const getUsers= (filtre,indice) => ({\n    \"type\":  GET_USERS,\n    filtre: filtre,\n    indice: indice\n});\nexport const getUsersSuccess= (data) => ({\n    \"type\":  GET_USERS_SUCCESS,\n    data\n});\nexport const getUsersError= (err) => ({\n    \"type\":  GET_USERS_ERROR,\n    err\n});\nexport const blockUser= (blocked_user_id) => ({\n    \"type\":  BLOCK_USER,\n    blocked_user_id\n});\nexport const deblockUser= (deblocked_user_id) => ({\n    \"type\":  DEBLOCK_USER,\n    deblocked_user_id\n});\nexport const getBlockUser= () => ({\n    \"type\":  GET_BLOCK_USER,\n});\nexport const getBlockUserSuccess= (data) => ({\n    \"type\":  GET_BLOCK_USER_SUCCESS,\n    data\n});\nexport const likeUser= (liked_user_id) => ({\n    \"type\":  LIKE_USER,\n  liked_user_id\n});\nexport const dislikeUser= (dislike_user_id) => ({\n    \"type\":  DISLIKE_USER,\n    dislike_user_id\n});\nexport const dislikeUserAct= (dislike_user_id) => ({\n    \"type\":  DISLIKE_USER_ACT,\n    dislike_user_id\n});\nexport const getLikeUser= () => ({\n    \"type\":  GET_LIKE_USER,\n});\nexport const getLikeUserSuccess= (data) => ({\n    \"type\":  GET_LIKE_USER_SUCCESS,\n    data\n});\nexport const deleteLike= (id) => ({\n    \"type\":  DELETE_LIKE,\n    id : id\n});\nexport const deleteBlock= (id) => ({\n    \"type\":  DELETE_BLOCK,\n    id : id\n});\nexport const deleteUser= (id) => ({\n    \"type\":  DELETE_USER,\n    id: id,\n});\n\nexport const reportUser= (reported_user_id) => ({\n    \"type\":  REPORT_USER,\n  reported_user_id\n});\n\nexport const viewProfileUser= (viewed_user_id) => ({\n    \"type\":  VIEW_PROFILE_USER,\n    viewed_user_id\n});\nexport const sortUsers= (methode,route,indice) => ({\n    \"type\":  SORT_USERS,\n    methode,\n    route,\n    indice\n});\nexport const getViewProfileList= () => ({\n    \"type\":  GET_VP_LIST,\n});\nexport const getViewProfileListSuccess= (data) => ({\n    \"type\":  GET_VP_LIST_SUCCESS,\n    data\n});\nexport const getLikedBy= () => ({\n    \"type\":  GET_LIKED_BY,\n});\nexport const getLikedBySuccess= (data) => ({\n    \"type\":  GET_LIKED_BY_SUCCESS,\n    data\n});","export const RESET_STATE = \"RESET_STATE\";\n\nexport const RESET_CHAT_STATE = \"RESET_CHAT_STATE\";\n\nexport const RESET_NOTIF_STATE = \"RESET_NOTIF_STATE\";\n\nexport const RESET_STATE_USERS = \"RESET_STATE_USERS\";\n\nexport const resetState = () => ({\n    \"type\": RESET_STATE\n});\n\nexport const resetStateUsers= () => ({\n    \"type\": RESET_STATE_USERS\n});\nexport const resetChatState = () => ({\n    \"type\": RESET_CHAT_STATE\n});\nexport const resetNotifState = () => ({\n    \"type\": RESET_NOTIF_STATE\n});","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: '0px',\n    borderRadius : '20px',\n    outline: 0,\n  },\n}));\n\nexport default function MyModal(props) {\n  const {isOpen, children, handleClose} = props;\n  const classes = useStyles();\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={isOpen}\n        onClose={handleClose}\n      >\n        <Fade in={isOpen}>\n          <div className={classes.paper}>\n            {children}\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\nimport defaultImg from '../../image/default.jpg';\nimport ReactIdSwiperCustom from 'react-id-swiper/lib/ReactIdSwiper.custom';\nimport { Swiper, Navigation, Pagination } from 'swiper/js/swiper.esm';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport BlockIcon from '@material-ui/icons/Block';\nimport ReportIcon from '@material-ui/icons/Report';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SupervisedUserCircleOutlinedIcon from '@material-ui/icons/SupervisedUserCircleOutlined';\nimport SupervisedUserCircleRoundedIcon from '@material-ui/icons/SupervisedUserCircleRounded';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 320,\n    maxHeight: 600,\n    borderRadius : '20px',\n   \n   backgroundColor: '#E6EAEA'\n  },\n  cardMedia : {\n    maxWidth: 320,\n    maxHeight : 250,\n  },\n  cardHeader : {\n    maxWidth: 320,\n    maxHeight : 100,\n  },\n  cardContent : {\n    maxWidth: 320,\n    maxHeight : 200,\n  },\n  cardAction : {\n    marginTop: 5,\n    maxWidth: 320,\n    maxHeight : 50,\n  },\n  avatarON: {\n    backgroundColor: '#00FB0C',\n    width: 15,\n    height: 15,\n  },\n  avatarOF: {\n    backgroundColor: '#e42416',\n    width: 15,\n    height: 15,\n  },\n  chip: {\n    marginRight: '5px',\n  },\n}));\n\nexport default function ViewProfile(props) {\n  const {user,images,interests,handleBlock,handleLike,handleReport,handleDislike} = props;\n  const classes = useStyles();\n  const value = user.rating;\n      const params = {\n        Swiper,\n        modules: [Navigation, Pagination],\n        pagination: {\n          el: '.swiper-pagination',\n          type: 'bullets',\n          clickable: true,\n        },\n        navigation: {\n          nextEl: '.swiper-button-next',\n          prevEl:  '.swiper-button-prev'\n        },\n        spaceBetween: 30 \n      }\n\n  return (\n    <Card  className={classes.card}>\n      <CardHeader\n      className={classes.cardHeader}\n      action={ \n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n        <div className={classes.rating1}>\n          <Rating\n            name=\"read-only\"\n            value={value}\n            precision={0.1}\n            readOnly\n          />\n        </div>\n        </Box>\n        }\n        avatar={\n          <Avatar aria-label=\"recipe\" className={user.isOnline === 1 ? classes.avatarON : classes.avatarOF}></Avatar> \n        }\n        title={user.firstname +' ' + user.lastname + ' @'+user.username}\n        subheader={user.isOnline === 1 ? 'Online' : 'Last seen :' + user.lastSignIn}\n      >\n      </CardHeader>\n      <CardMedia\n        className={classes.cardMedia}\n        children={\n            <ReactIdSwiperCustom {...params}>\n                {\n          images.length !== 0 ? images.map((tile) =>\n            <div key={tile.id}>\n              \n                <img style={{width: \"100%\",height:\"250px\"}} src={`http://localhost:5000/images/${tile.path}`} alt=\"images\"/>\n            \n            </div>\n            ) : <img  style={{width: \"100%\",height:\"250px\"}} src={defaultImg} alt=\"images\"/>\n        }\n                </ReactIdSwiperCustom>\n        }\n      />\n      <CardContent className={classes.cardContent}> \n      \n        <Typography >\n          <strong>AGE :</strong>{user.age} \n        </Typography>\n        <Typography >\n          <strong>GENDER :</strong>{user.gender}\n        </Typography>\n        <Typography >\n          <strong>INTERESTED IN :</strong>{user.sexOrient}\n        </Typography>\n        <Typography component={'span'}>\n          <strong>TAGS :</strong> {interests != null &&  interests.map((item, index) =><Chip key={index} className={classes.chip} label={item.value} />)}\n        </Typography>\n        <Typography >\n          <strong>BIO :</strong> {user.bio} \n        </Typography>\n      </CardContent>\n      <CardActions className={classes.cardAction}>\n      {user.like === null &&\n          <Tooltip title =\"Like\"><IconButton aria-label=\"Like\" onClick={(e) => handleLike(user.id)}>\n            <FavoriteBorderIcon  color=\"secondary\" />\n          </IconButton></Tooltip>\n        }\n        {user.like === 'iLike' &&\n          <Tooltip title =\"Unlike\"><IconButton aria-label=\"Unlike\" onClick={(e) => handleDislike(user.id)}>\n            <FavoriteIcon  color=\"secondary\"/>\n          </IconButton></Tooltip>\n        }\n        {user.like === 'heLiked' &&\n          <Tooltip title =\"Like back\"><IconButton aria-label=\"Like back\"  onClick={(e) => handleLike(user.id)}>\n            <SupervisedUserCircleOutlinedIcon color=\"primary\"/>\n          </IconButton></Tooltip>\n        }\n        {user.like === 'match' &&\n          <Tooltip title =\"Unmatch\"><IconButton aria-label=\"Unmatch\"  onClick={(e) => handleDislike(user.id)}>\n            <SupervisedUserCircleRoundedIcon color=\"primary\"/>\n          </IconButton></Tooltip>\n        }\n        <Tooltip title =\"Block\"><IconButton aria-label=\"Block\"  onClick={(e) => handleBlock(user.id)}>\n          <BlockIcon  color=\"secondary\"/>\n        </IconButton></Tooltip>\n        <Tooltip title =\"Report\"><IconButton aria-label=\"Report\"  onClick={(e) => handleReport(user.id)}>\n        <ReportIcon  color=\"secondary\"/>\n        </IconButton></Tooltip>\n      </CardActions>\n    </Card>\n  );\n}","import React ,{useEffect,useState}from 'react';\nimport {connect} from \"react-redux\";\nimport Home from '../../components/Browse';\nimport {getOptions} from '../../actions/addInfoAction';\nimport {sortUsers, getUsers,blockUser,likeUser,dislikeUser,reportUser,viewProfileUser} from '../../actions/userAction';\nimport {resetStateUsers} from '../../actions/resetStateAction';\nimport MyModal from \"../../components/commun/modal\";\nimport ViewPro from \"../../components/Browse/vP\";\n\nconst HomeContainer = (props) => {\n    const {getOptions, selectOptions,getUsers,blockUser,likeUser,dislikeUser,reportUser,users,viewProfileUser,router,resetStateUsers,sortUsers} = props\n    const [sort, setSort] = useState(false);\n    const [suggestion, setSuggestion] = useState(true);\n    const [methode, setMethode] = useState(null);\n    const route = router.location.pathname;\n    const [indice,setIndice] = useState(0);\n    const [rating, setValueRating] = useState([0,0]);\n    const [age, setValueAge] = useState([18,18]);\n    const [loc, setValueLoc] = useState([0,0]);\n    const [nbrTags, setValueNbrTags] = useState([0,0]);\n    const [tags, setValuetags] = useState(null);\n    const [state, setState] = useState({\n        open: false,\n        user: null,\n        images: null,\n        interests: null,\n    });\n    let arrayTags = [];\n    tags && tags.forEach(item => {\n        arrayTags.push(item.value); \n    });\n    const filtre = {\n        tags : arrayTags,\n        nbrTags : nbrTags,\n        rating : rating,\n        age : age,\n        loc : loc,\n        router : route,\n    }\n    useEffect(() => {\n        getOptions();\n        setValueRating([0,0]);\n        setValueAge([18,18])\n        setValueLoc([0,0])\n        setValueNbrTags([0,0])\n        setValuetags(null)\n        setIndice(0);\n        if(route === '/browse')\n            getUsers(null,0);    \n        else if(route === '/search')\n            resetStateUsers();\n    }, [route]);\n    \n\n    const handleChangeRating = (e,newValue) => {\n        setValueRating(newValue);\n        return newValue;\n    };\n    const handleChangeAge = (e,newValue) => {\n        setValueAge(newValue);\n        return newValue;\n    };\n    const handleChangeLoc = (e,newValue) => {\n        setValueLoc(newValue);\n        return newValue;\n    };\n    const handleChangeNbrTags = (e,newValue) => {\n        setValueNbrTags(newValue);\n        return newValue;\n    };\n    const handleChangeTags = (newValue) => {\n        setValuetags(newValue);\n        return newValue;\n    };   \n    window.onscroll = function(ev) {\n        if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\n            \n            if(sort === true)\n                sortUsers(methode,route,indice+1);\n            else if(suggestion === true)\n                getUsers(filtre,indice+1)    \n            setIndice(indice + 1);\n        }\n    };\n    const handleSubmit = () => {\n        if(arrayTags.length === 0 && nbrTags[0] === 0 && nbrTags[1] === 0 && rating[0] === 0 \n            && rating[1] === 0 && loc[0] === 0 && loc[1] === 0 && age[0] === 18  && age[1] === 18 && route === '/search')\n            {\n                resetStateUsers();\n                return ;\n            }\n        setSuggestion(true);\n        setSort(false);\n        setIndice(0);\n        getUsers(filtre,0);\n        \n    };\n    const handle = (methode) => {\n        setIndice(0);\n        setSort(true);\n        setSuggestion(false);\n        setMethode(methode);\n        sortUsers(methode,route,0);\n    };\n    const handleBlock = (blocked_user_id) => {\n            blockUser(blocked_user_id);\n            setState({\n                open: false,\n            });\n    };\n    const handleDislike= (dislike_user_id) =>{\n        dislikeUser(dislike_user_id);\n        setState({\n            open: false,\n        });\n    };\n    const handleLike = (liked_user_id) => {\n            likeUser(liked_user_id);\n            setState({\n                open: false,\n            });\n    };\n    const handleReport = (reported_user_id) => {\n            reportUser(reported_user_id);\n            setState({\n                open: false,\n            });\n    };\n    const handleViewProfile = (user,images,interests) => {\n        viewProfileUser(user.id);\n        setState({\n            open: true,\n            user: user,\n            images: images,\n            interests: interests,\n        });\n    };\n    const handleClose = () => {\n        setState({\n            open: false,\n        });\n    };\n    return (\n        <div>\n            <Home selectOptions={selectOptions} users={users} handleBlock={handleBlock} handleLike={handleLike} handleViewProfile={handleViewProfile} handleChangeRating={handleChangeRating}\n                handleChangeAge={handleChangeAge} handleChangeLoc={handleChangeLoc} handleChangeNbrTags={handleChangeNbrTags} rating={rating}\n                handleChangeTags={handleChangeTags} loc={loc} nbrTags={nbrTags} age={age} handleSubmit={handleSubmit} handle={handle} handleDislike={handleDislike}\n                />\n            \n                    {state.open && <MyModal isOpen={state.open}  handleClose={handleClose}>\n                        <ViewPro    handleBlock={handleBlock} handleLike={handleLike} handleReport={handleReport}\n                        handleDislike={handleDislike} user={state.user} images={state.images} interests={state.interests}\n                        />\n                    </MyModal>}\n        \n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"user\": state.user,\n    'selectOptions': state.addInfo.selectOptions,\n    \"users\": state.users,\n    \"router\" : state.router,\n});\nconst mapDispatchToProps = {\n    \"getOptions\": getOptions,\n    \"getUsers\" : getUsers,\n    \"blockUser\" : blockUser,\n    \"likeUser\" : likeUser,\n    \"dislikeUser\" : dislikeUser,\n    \"reportUser\" : reportUser,\n    \"viewProfileUser\" : viewProfileUser,\n    \"resetStateUsers\" : resetStateUsers,\n    \"sortUsers\" : sortUsers,\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(HomeContainer);","import React  from 'react';\nimport { Field} from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport MyFlash from '../commun/flash'\nimport renderField from '../commun/TextField'\n\nconst useStyles = makeStyles(theme => ({\n  \n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%'\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: theme.palette.secondary.main\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nconst Login = (props) => {\n  const {handleSubmit, status, errors, registredStatus} = props;\n  const classes = useStyles();\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      \n    {registredStatus === 'success' && <MyFlash variant=\"success\" msg={['Registred successfully, check your e-mail']}/>}\n    {status === \"errorField\" && <MyFlash variant=\"error\" msg={[errors]}/>}\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar}>\n            <LockRoundedIcon/>\n          </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\n          Sign in\n        </Typography>\n        \n        <form  className={classes.form}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n            <Field\n                name=\"username\"\n                label=\"Username\"\n                type = \"text\"\n                component={renderField}\n            />\n            </Grid>\n            <Grid item xs={12}>\n            <Field\n              name=\"password\"\n              type=\"password\"\n              component={renderField}\n              rows='1'\n              label=\"Password\"\n            />\n            </Grid>\n            <Grid item xs={12}>\n              <Button  onClick={handleSubmit} className={classes.submit} fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" name=\"submit\" value=\"ok\" >Submit</Button>\n            </Grid>\n          </Grid>\n        </form>   \n        <Grid container justify=\"flex-end\">\n          <Grid item xs>\n              <Link to=\"/forgotPassword\"  style={{textDecoration: 'none', color:'#3f51b5'}}>\n                  Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/register\" style={{textDecoration: 'none', color:'#3f51b5'}}>\n                  Don't have an account? Sign Up\n              </Link>\n            </Grid>\n          </Grid>\n      </div>\n    </Container>\n  );\n}\n\nexport default Login;","import Login from '../../components/Login';\nimport {LoginAction} from '../../actions/loginAction';\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        'username',\n        'password',\n    ];\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"form\" : state.form,\n    \"status\" : state.login.status,\n    \"errors\": state.login.error,\n    \"token\" : state.user,\n    \"registredStatus\": state.register.registerStatus,\n});\nconst mapDispatchToProps = {\n    \"loginAction\": LoginAction\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit((form) => {\n        dispatchProps.loginAction(form);\n    })\n});\n\nconst connectedLoginContainer = connect(mapStateToProps, mapDispatchToProps,mergeProps)(Login);\n\nconst LoginContainer = reduxForm({\n    form : \"login\",\n    \"destroyOnUnmount\": true,\n    validate,\n})(connectedLoginContainer);\n\nexport default LoginContainer;","export const LOGIN_USER = \"LOGIN_USER\";\n\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\n\nexport const LOGIN_USER_ERROR = \"LOGIN_USER_ERROR\";\n\nexport const LOGIN_USER_ERROR_FIELD = \"LOGIN_USER_ERROR_FIELD\";\n\n\nexport const LoginAction = (dataInsc) => ({\n  \"type\": LOGIN_USER,\n  \"data\": dataInsc\n});\n\nexport const loginUserSuccess = () => ({\n    \"type\": LOGIN_USER_SUCCESS,\n});\n\nexport const loginError = (error) => ({\n    \"type\": LOGIN_USER_ERROR,\n    error\n});\n\nexport const loginErrorField = (errorField) => ({\n    \"type\": LOGIN_USER_ERROR_FIELD,\n    errorField\n});","import React from 'react'\nimport img from '../../image/404.png';\nconst NotFoundPage = () => {\n    return (\n        <img src={img} style={{width: '97%', height: '100%'}} alt=\"NotFoundPage\"/>\n    )\n}\nexport default NotFoundPage\n","export const RESET_PASSWORD = \"RESET_PASSWORD\";\n\nexport const RESET_PASSWORD_SUCCESS = \"RESET_PASSWORD_SUCCESS\";\n\nexport const RESET_PASSWORD_ERROR = \"RESET_PASSWORD_ERROR\";\n\nexport const SEND_EMAIL = \"SEND_EMAIL\";\n\nexport const SEND_EMAIL_SUCCESS = \"SEND_EMAIL_SUCCESS\";\n\nexport const SEND_EMAIL_ERROR = \"SEND_EMAIL_ERROR\";\n\nexport const SendEmail = (data) => ({\n  \"type\": SEND_EMAIL,\n  \"data\": data\n});\n\nexport const SendEmailSuccess = () => ({\n    \"type\": SEND_EMAIL_SUCCESS,\n});\n\nexport const SendEmailError = (error) => ({\n    \"type\": SEND_EMAIL_ERROR,\n    error\n});\n\nexport const ResetPasswordAction = (dataInsc) => ({\n  \"type\": RESET_PASSWORD,\n  \"data\": dataInsc\n});\n\nexport const ResetPasswordSuccess = () => ({\n    \"type\": RESET_PASSWORD_SUCCESS,\n});\n\nexport const ResetPasswordError =  (error) => ({\n    \"type\": RESET_PASSWORD_ERROR,\n    error\n});","import React from 'react';\nimport {Field} from 'redux-form';\nimport Avatar from '@material-ui/core/Avatar';\nimport SendTwoToneIcon from '@material-ui/icons/SendTwoTone';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport MyFlash from '../commun/flash'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport renderField from '../commun/TextField';\nconst useStyles = makeStyles(theme => ({\n \n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  \n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: theme.palette.secondary.main\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n \n}));\n\n\nconst ForgotPassword = (props) => {\n  const classes = useStyles();\n    const {handleSubmit, status, errors} = props;\n    return (\n     <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      {status === \"success\" && <MyFlash variant=\"success\" msg={['Please check your e-mail']}/>}\n      {status === \"error\" && <MyFlash variant=\"error\" msg={[errors]}/>}\n      {status !== 'loading' && <div className={classes.paper}> \n      <Avatar className={classes.avatar}>\n            <SendTwoToneIcon/>\n      </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\n          Send reset link\n        </Typography>\n        <form  className={classes.form}>\n            <Grid item xs={12}>\n              <Field\n                  name=\"email\"\n                  component={renderField}\n                  label=\"Email\"\n                  type = \"email\"\n                  rows='1'\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n            <Button  className={classes.submit} fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" onClick={handleSubmit}>Submit</Button>\n            </Grid>\n        </form>\n      </div>}\n\n      {status === \"loading\" && <div className={classes.paper} style={{marginTop: \"300px\"}}><CircularProgress color=\"secondary\" /></div>}\n\n    </Container>\n    )\n  }\n\n  export default ForgotPassword;","import {SendEmail} from '../../actions/resetPasswordAction'\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\nimport ForgotPassword from '../../components/SendEmail'\n\n\nconst validate = (values) => {\n    const errors = {};\n\n    const requiredFields = [\n        'email'\n      ];\n      requiredFields.forEach(field => {\n        if (!values[field]) {\n          errors[field] = 'Required!';\n        }\n      });\n\n    if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = \"Invalid email address\";\n    }\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"form\" : state.form,\n    \"status\" : state.resetPassword.status,\n    \"errors\" : state.resetPassword.errors\n});\nconst mapDispatchToProps = {\n    \"sendEmail\": SendEmail\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit((form) => {\n        dispatchProps.sendEmail(form);\n    })\n});\n\nconst cnForgotPasswordContainer = connect(mapStateToProps, mapDispatchToProps,mergeProps)(ForgotPassword);\n\nconst ForgotPasswordContainer = reduxForm ({\n    form: 'ForgotPassword',\n    validate\n}) (cnForgotPasswordContainer);\n\nexport default ForgotPasswordContainer;","import React  from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nconst EmailConfirmation = (props) => {\n  const classes = useStyles();\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n\n    {props.status !== 'loading' && <div className={classes.paper}>\n        <Typography variant=\"h4\" color=\"primary\">\n          Email confirmation\n        </Typography>\n        {props.status === 'error' && <Typography variant=\"h6\" color=\"error\">\n          <ErrorIcon /> There was an error, please retry.\n        </Typography>}\n        {props.status === 'success' && <Typography variant=\"h6\" color=\"inherit\">\n          <CheckCircleIcon /> Email verified successfully.\n          <br/>\n          You can now <Link to=\"/login\"  style={{textDecoration: 'none', color:'#3f51b5'}}>Login</Link>\n        </Typography>}\n      </div>}\n      {props.status === \"loading\" && <div className={classes.paper} style={{marginTop: \"300px\"}}><CircularProgress color=\"secondary\" /></div>}\n    </Container>\n  );\n}\n\nexport default EmailConfirmation;","import React, { Component } from 'react';\nimport EmailConfirmation from '../../components/emailConfirmation';\nimport {EmailConfirmationAction} from '../../actions/registerAction';\nimport {connect} from \"react-redux\";\n\nclass EmailConfirmCont extends Component {\n    componentDidMount = () => {\n        const token = this.props.match.params.token;\n        this.props.emailConfirm(token);\n    }\n    render() {\n        return (\n            <EmailConfirmation status={this.props.status} />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"status\" : state.register.emailConfirmation,\n});\nconst mapDispatchToProps = {\n    \"emailConfirmation\": EmailConfirmationAction\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"emailConfirm\" : function (token) {\n        dispatchProps.emailConfirmation(token);\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps,mergeProps)(EmailConfirmCont);","import React  from 'react';\nimport { Field} from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MyFlash from '../commun/flash'\nimport renderField from '../commun/TextField';\nconst useStyles = makeStyles(theme => ({\n  \n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: theme.palette.secondary.main\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\n\n\nconst ResetPassword = (props) => {\n    const {handleSubmit, status, resetPasswordStatus, resetError} = props;\n    const classes = useStyles();\n\n    return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n    {resetPasswordStatus === \"success\" && <MyFlash variant=\"success\" msg={['Your password has been reset successfully! You will be redirected to login']}/>}\n    {resetPasswordStatus === \"error\" && <MyFlash variant=\"error\" msg={[resetError+' You will be redirected to login']}/>}\n    {status !== \"loading\" &&\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar}>\n            <LockRoundedIcon/>\n          </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\n          Reset password\n        </Typography>\n        <form  className={classes.form}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Field\n                        name=\"password\"\n                        component={renderField}\n                        label=\"Password\"\n                        type=\"password\"\n                        rows='1'\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Field\n                        name=\"confirmPassword\"\n                        component={renderField}\n                        label=\"ConfirmPassword\"\n                        type=\"password\"\n                        rows='1'\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Button  onClick={handleSubmit} className={classes.submit} fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" name=\"submit\" value=\"ok\" >Submit</Button>\n                </Grid>\n            </Grid>\n        </form>    \n        \n        \n    </div>}\n    {status === \"loading\" && <div className={classes.paper} style={{marginTop: \"300px\"}}><CircularProgress color=\"secondary\" /></div>}\n      \n    </Container>\n    );\n}\n\nexport default ResetPassword;","import ResetPassword from '../../components/resetPassword';\nimport {ResetPasswordAction} from '../../actions/resetPasswordAction';\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        'password',\n        'confirmPassword',\n    ];\n\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n\n    if(values.password && !/\\d/.test(values.password))\n        errors.password = \"Password must contain a number !\"\n    else if(values.password && !/[A-Z]/.test(values.password))\n        errors.password = \"Password must contain an uppercase letter !\"\n    else if(values.password && !/[a-z]/.test(values.password))\n        errors.password = \"Password must contain a lowercase letter !\"\n    else if(values.password && !/[ !@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/.test(values.password))\n        errors.password = \"Password must contain a special character !\"\n    else if(values.password && !/[a-zA-Z0-9 !@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/? ]{8,20}/.test(values.password))\n        errors.password = \"Password must contain 8-20 characters !\"\n    if(values.confirmPassword && values.password !== values.confirmPassword)\n        errors.confirmPassword = \"Passwords does not match !\"\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"form\" : state.form,\n    \"status\" : state.resetPassword.status,\n    \"resetPasswordStatus\": state.resetPassword.status,\n    \"resetError\": state.resetPassword.error\n});\nconst mapDispatchToProps = {\n    \"resetPasswordAction\": ResetPasswordAction\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit((form) => {\n        const token = otherProps.match.params.token;\n        const data = {form, token}\n        dispatchProps.resetPasswordAction(data);\n    })\n});\n\nconst connectedResetPasswordContainer = connect(mapStateToProps, mapDispatchToProps,mergeProps)(ResetPassword);\nconst ResetPasswordContainer = reduxForm({\n    form : \"resetPassword\",\n    \"destroyOnUnmount\": true,\n    validate,\n})(connectedResetPasswordContainer);\n\nexport default ResetPasswordContainer;","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\n\nconst RadioGroup = (props) => {\n    const { input, meta, options } = props;\n    const hasError = meta.touched && meta.error;\n\n    return (\n      <div>\n        {options.map(o => <label key={o.value}>\n          <Radio {...input}  checked={o.value === input.value} value={o.value} />\n          {o.title}</label>)}<br/>\n        {hasError && <span style={{'fontSize':'12px','color':'#f44336'}}>{meta.error}</span>}\n      </div>\n    );\n}\n\nexport default RadioGroup","import React  from 'react';\nimport {Field} from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport CreatableSelect from 'react-select/creatable';\nimport MySnackBar from '../commun/flash';\nimport renderField from '../commun/TextField';\nimport RadioGroup from '../commun/RadioGroup';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%'\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(2, 0, 2),\n        backgroundColor: theme.palette.secondary.main,\n    },\n}));\n\n\n\nconst renderDatepicker = ({input, label, meta : { touched, error}}\n  ) => (\n      <TextField\n          {...input}\n          type = 'date'\n          label = {label}\n          error = {touched && (error ? true : false)}\n          helperText={touched && error}\n          fullWidth\n          InputLabelProps={{\n            shrink: true,\n          }}\n      />\n)\n\nconst AddInfo = (props) => {\n  const classes = useStyles();\n  const {handleSubmit, selectLoading, selectOptions, selectError, createOption} = props;\n\n  const handleCreate =  (value) => {\n    createOption(value);\n  }\n\n  const selectField = ({ input, meta: { touched, error }}) => (\n    <div>\n      <CreatableSelect\n        {...input}\n        isMulti\n        isDisabled={selectLoading}\n        isLoading={selectLoading}\n        isClearable={false}\n        options={selectOptions}\n        onBlur={() => input.onBlur(input.value)}\n        onChange={(value) => { input.onChange(value) }}\n        onCreateOption={handleCreate}\n      />\n      <div>{(touched && error) &&\n        <div style={{'fontSize':'12px','color':'rgb(244, 67, 54)'}}>{error}</div>}\n      </div>\n    </div>\n  );\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n    <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\n          Additional infos\n        </Typography>\n        {selectError && <MySnackBar variant=\"error\" msg={selectError}/> }\n        <form  className={classes.form}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Gender</FormLabel>\n              <Field component={RadioGroup} name=\"gender\" required={true} options={[\n                    { title: 'Male', value: 'male' },\n                    { title: 'Female', value: 'female' }\n                  ]}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <FormLabel component=\"legend\">Match with</FormLabel>\n              <Field component={RadioGroup} name=\"sexOrient\" required={true} options={[\n                    { title:  'Men ' , value: 'men'  },\n                    { title:  'Women', value: 'women'},\n                    { title:  'Both' , value: 'both' }\n                  ]}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Birthday</FormLabel>\n              <Field\n                name=\"birthday\"\n                component={renderDatepicker}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Bio</FormLabel>\n              <Field\n                name=\"bio\"\n                component={renderField}\n                type = \"text\"\n                rows='4'\n                variant='outlined'\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Interests</FormLabel>\n              <Field name='interests' component={selectField}/>\n            </Grid>\n            <Grid  container direction=\"row\" item xs={12}>\n              <Grid item xs={9}/>\n              <Grid item container alignItems=\"flex-end\" xs={3}>\n                <Button  onClick={handleSubmit} className={classes.submit} fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" name=\"submit\" value=\"ok\" >Next</Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default AddInfo;","const Age = (b) => {\n    let today = new Date();\n    let birthDate = new Date(b);\n    let age = today.getFullYear() - birthDate.getFullYear();\n    let m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n        age--;\n    }\n    return age;\n}\n\nexport default Age;","import AddInfo from '../../components/completeProfile/addInfo';\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\nimport Age from '../../components/commun/age';\nimport {createOption, addInfo} from '../../actions/addInfoAction';\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        'gender',\n        'sexOrient',\n        'birthday',\n        'bio',\n    ];\n    const requiredArr = [\n        'interests'\n    ];\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n    requiredArr.forEach(field => {\n        if (!values[field]) {\n            errors[field] = 'Required !';\n        }\n    });\n\n    if(values.bio && !/^.{1,200}$/.test(values.bio))\n        errors.bio = 'maximum 200 characters';\n\n    if(values.birthday && !/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/.test(values.birthday))\n        errors.birthday = 'Invalid date !';\n\n    const age = Age(values.birthday)\n    if(age < 18)\n        errors.birthday = \"Come back when you're 18 ;)\"\n    if(age > 120)\n        errors.birthday = 'Invalid age !'\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    'values' : state.form.values,\n    'selectOptions': state.addInfo.selectOptions,\n    'selectLoading': state.addInfo.selectLoading,\n    'selectError' : state.addInfo.error,\n    'user': state.user,\n});\nconst mapDispatchToProps = {\n    \"addInfo\": addInfo,\n    \"createOption\": createOption,\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n\n    \"handleSubmit\" : otherProps.handleSubmit((values) => {\n        dispatchProps.addInfo(values, stateProps.user.id);\n    }),\n});\n\nconst connectedAddInfoContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(AddInfo);\n\nlet AddInfoContainer = reduxForm ({\n    form : \"addInfo\",\n    destroyOnUnmount: true,\n    validate,\n})(connectedAddInfoContainer);\n\nAddInfoContainer = connect(\n    state => ({\n        initialValues: {\n            gender: state.user.gender,\n            sexOrient: state.user.sexOrient,\n            birthday: state.user.birthday,\n            bio: state.user.bio,\n            interests: state.user.interests,\n        },\n    }),\n)(AddInfoContainer);\n\nexport default AddInfoContainer;","import React  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Container } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport IconButton from '@material-ui/core/IconButton';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport DeleteForeverSharpIcon from '@material-ui/icons/DeleteForeverSharp';\nimport CheckCircleSharpIcon from '@material-ui/icons/CheckCircleSharp';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst useStyles = makeStyles(theme => ({\n  card: {\n   height :150,\n    position : 'center',\n  },\n  input: {\n    display: 'none',\n  },\n  submit: {\n    margin: theme.spacing(2, 0, 2),\n    backgroundColor: theme.palette.secondary.main,\n}, root: {\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-around',\n  overflow: 'hidden',\n\n},\ngridList: {\n  width: 500,\n  height: 450,\n},\ntitleBar: {\n  background:\n    'linear-gradient(to top, rgba(0,0,0,0.6) 0%, ' +\n    'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n},\ndelete : {\n  background : 'none'\n},\nadd : {\n  display: 'none',\n}\n}));\nconst calcImages = (images) =>{\n  let len = 0;\n  if(images != null){\n    len = images.length;\n    if(len > 4){\n      return false;\n    }\n  }\n  return true;\n  \n}\n\nconst  Pictures = (props) => {\n  const {fileChangedHandler,images,deletePicture,setProfilePicture} = props;\n  const classes = useStyles();\n  return (\n    <Container>\n    <CssBaseline />\n      <Grid container  justify=\"center\">\n       <div className={calcImages(images.images) === false ? classes.add : ''}>\n         <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\"  onChange={fileChangedHandler}/>\n         <label htmlFor=\"icon-button-file\">\n          <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n            <AddAPhotoIcon color='primary' style={{fontSize : 70}}/>\n          </IconButton>\n        </label>\n        </div>\n      \n      </Grid>\n          <div className={classes.root}>\n            <GridList cellHeight={180} className={classes.gridList}>\n\n              {images.isImages  && images.images.map((tile) => {\n                return (\n                  <GridListTile  key={tile.id}>\n                    <img src={`http://localhost:5000/images/${tile.path}`} alt='photos' />\n                    <GridListTileBar\n                      actionPosition=\"left\"\n                      className={classes.titleBar}\n                      title={tile.isProfilePic === 1 && 'Profile picture'}\n                      actionIcon={\n                        <Tooltip title =\"set profile pic\"><IconButton aria-label=\"profilePic\"  onClick={(e) => setProfilePicture(tile.id)}>\n                          <CheckCircleSharpIcon  color=\"secondary\"/>\n                        </IconButton></Tooltip>\n                        \n                      }\n                    />\n                    <GridListTileBar\n                      className={classes.delete}\n                      titlePosition=\"top\"\n                      actionIcon={\n                        images.images.length > 1 &&\n                        <Tooltip title =\"delete pic\"><IconButton aria-label=\"deletePic\"  onClick={(e) => deletePicture(tile.id,tile.isProfilePic)}>\n                          <DeleteForeverSharpIcon  color=\"secondary\"/>\n                        </IconButton></Tooltip>  \n                        \n                      }\n                    />\n                  </GridListTile> \n                )}\n              )}\n            </GridList>\n            \n          </div>\n    </Container>\n  )\n}\n  \nexport default Pictures;","export const GET_IMAGES = \"GET_IMAGES\";\nexport const GET_IMAGES_SUCCESS = \"GET_IMAGES_SUCCESS\";\nexport const GET_IMAGES_ERROR = \"GET_IMAGES_ERROR\";\nexport const SEND_IMAGES = \"SEND_IMAGES\";\nexport const SEND_IMAGES_ERROR = \"SEND_IMAGES_ERROR\";\nexport const SEND_IMAGES_SUCCESS = \"SEND_IMAGES_SUCCESS\";\nexport const DEL_IMAGES = \"DEL_IMAGES\";\nexport const DEL_IMAGES_SUCCESS = \"DEL_IMAGES_SUCCESS\";\nexport const DEL_IMAGES_ERROR = \"DEL_IMAGES_ERROR\";\nexport const SET_PROFILE_PIC = 'SET_PROFILE_PIC';\nexport const SET_PROFILE_PIC_SUCCESS = 'SET_PROFILE_PIC_SUCCESS';\nexport const SET_PROFILE_PIC_ERROR = 'SET_PROFILE_PIC_ERROR';\nexport const getImages= (user_id) => ({\n    \"type\": GET_IMAGES,\n    user_id\n});\nexport const getImagesSuccess= (images) => ({\n    \"type\": GET_IMAGES_SUCCESS,\n    images\n});\nexport const getImagesError= (err) => ({\n    \"type\": GET_IMAGES_ERROR,\n    err\n});\n\nexport const sendImages= (data) => ({\n    \"type\": SEND_IMAGES,\n    data,\n});\nexport const sendImagesError= (err) => ({\n    \"type\": SEND_IMAGES_ERROR,\n    err\n});\nexport const sendImagesSuccess= () => ({\n    \"type\": SEND_IMAGES_SUCCESS,\n});\nexport const delImages= (img) => ({\n    \"type\": DEL_IMAGES,\n    img\n});\nexport const delImagesError= (err) => ({\n    \"type\": DEL_IMAGES_ERROR,\n    err\n});\nexport const delImagesSuccess= (images) => ({\n    \"type\": DEL_IMAGES_SUCCESS,\n    images\n});\nexport const setProfilePic= (imgId) => ({\n    \"type\": SET_PROFILE_PIC,\n    imgId\n});\nexport const setProfilePicSuccess= (images) => ({\n    \"type\": SET_PROFILE_PIC_SUCCESS,\n    images\n});\nexport const setProfilePicError= (err) => ({\n    \"type\": SET_PROFILE_PIC_ERROR,\n    err\n});","import React from 'react';\nimport Picture from '../../components/completeProfile/pictures';\nimport {connect} from \"react-redux\";\nimport {sendImages,delImages,setProfilePic} from '../../actions/imagesAction';\nconst Pictures = (props) => {\nconst { user,images,sendImages,delImages,setProfilePic} = props;\n\nconst fileChangedHandler = (event) => {\n    let files  = event.target.files[0];\n    const formData = new FormData();\n    formData.append('files',files);\n    formData.append('user_id',user.id);\n    sendImages(formData);\n    event.target.value = null;\n}\n\nconst deletePicture = (imgId,isProfilePic) => {\n   const img = {\n    imgId : imgId,\n    isProfilePic :isProfilePic\n   }\n    delImages(img);\n  }\n  const setProfilePicture = (imgId) => {\n    setProfilePic(imgId);\n  }\n\n    return (\n        <div>\n            <Picture\n                fileChangedHandler = {fileChangedHandler} \n                images = {images} deletePicture={deletePicture} setProfilePicture={setProfilePicture}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"user\" : state.user,\n    \"images\" : state.images,\n});\nconst mapDispatchToProps = {\n    \"sendImages\" : sendImages,\n    \"delImages\" : delImages,\n    \"setProfilePic\" :setProfilePic\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pictures);","import React, {useState}  from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport GoogleMapReact from 'google-map-react';\nimport RoomRoundedIcon from '@material-ui/icons/RoomRounded';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%'\n    },\n    form: {\n        height: '40vh',\n        width: '100%',\n        marginTop: theme.spacing(2),\n    },\n    submit: {\n        margin: theme.spacing(2, 0, 2),\n        backgroundColor: theme.palette.secondary.main,\n    },\n}));\n\nconst Localisation = (props) => {\n    const {userL, setLocation, isMarker} = props;\n\n    const classes = useStyles();\n\n    const [marker, setMarker] = useState(userL);\n\n    const AnyReactComponent = ({ text }) => <div>{text}</div>;\n\n    const handleClick = ({lat, lng}) => {\n        setMarker({lat, lng})\n        setLocation({lat, lng});\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n                <div className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\n                        Localisation\n                    </Typography>\n                    <Typography color=\"inherit\"> Click to set your location.</Typography>\n                    <div  className={classes.form}>\n                        <GoogleMapReact\n                            bootstrapURLKeys={{ key:'AIzaSyBeEUF7eMgjoDA6n4pfupjcBByH11i7yY8'}}\n                            center={{lat: userL.lat, lng: userL.lng}}\n                            defaultZoom={13}\n                            onClick={handleClick}\n                        >\n                        {marker && isMarker === true && <AnyReactComponent\n                            lat={marker.lat}\n                            lng={marker.lng}\n                            text={<RoomRoundedIcon color=\"secondary\"/>}\n                        />}\n                        </GoogleMapReact>\n                    </div>\n                </div>\n        </Container>\n    );\n}\n\nexport default Localisation;","import React, { Component } from 'react';\nimport Localisation from '../../components/completeProfile/localisation';\nimport {connect} from \"react-redux\";\nimport {getLoc, addLocationSuccess} from '../../actions/addInfoAction';\n\nclass LocalisationContainer extends Component{\n    componentDidMount(){\n        this.props.getLoc();\n    }\n    render(){\n        const userLocation = {lat: this.props.user.lat, lng: this.props.user.long}\n        const setLocation = ({lat, lng}) => {\n            const marker = true;\n            this.props.addLocationSuccess({marker, lat, lng});\n        }\n        if(!this.props.user.lat)\n            return null;\n        return (\n            <Localisation isMarker={this.props.user.marker} setLocation={setLocation} userL={userLocation}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"user\": state.user,\n});\nconst mapDispatchToProps = {\n    \"getLoc\": getLoc,\n    \"addLocationSuccess\": addLocationSuccess,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocalisationContainer);","import React  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\nimport AddInfoContainer from '../../containers/completeProfile/addInfo';\nimport Pictures from '../../containers/completeProfile/pictures';\nimport Localistaion from '../../containers/completeProfile/localisation'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Grid, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    minWidth: 350,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(8),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    minWidth: 0,\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  loading: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  submit: {\n    margin: theme.spacing(2, 0, 2),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  back: {\n    margin: theme.spacing(2, 0, 2),\n    backgroundColor: theme.palette.grey,\n  },\n}));\n\nconst steps = ['Additional infos', 'Pictures', 'Localisation'];\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <AddInfoContainer />;\n    case 1:\n      return <Pictures />;\n    case 2:\n      return <Localistaion/>;\n    default:\n      throw new Error('Unknown step');\n  }\n}\n\n\nconst Checkout = (props) => {\n\n  const {handleBack,handleNext,user,images} = props;\n  const activeStep = user.complete;\n    const classes = useStyles();\n\n    return (\n    <React.Fragment>\n      <CssBaseline />\n      {activeStep !== 'loading' &&\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\" color='secondary'>\n            Complete profile\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>      \n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Success\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  You completed your profile successfully.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        \n        {(activeStep === 1 || activeStep === 2) && \n           <Grid container direction=\"row\" item xs={12}>\n              <Grid item xs={3}>\n              <Button className={classes.back} fullWidth onClick={handleBack} variant=\"contained\" type=\"submit\" color=\"default\" >Back</Button>\n              </Grid>\n              <Grid item xs={6}/>\n\n              <Grid item container alignItems=\"flex-end\" xs={3}>\n                {\n                  images.isImages === true && \n                <Button  className={classes.submit} onClick={handleNext} fullWidth variant=\"contained\" type=\"submit\" color=\"primary\">Next</Button>\n              }\n                </Grid>\n            </Grid>\n        }\n        </Paper>\n      </main>}\n      {activeStep === \"loading\" && <div className={classes.loading}><CircularProgress color=\"secondary\" /></div>}\n    </React.Fragment>\n  );\n}\n\nexport default Checkout;","import React, { useEffect } from 'react';\nimport Stepper from '../../components/completeProfile/stepper';\nimport {getOptions, addLocation} from '../../actions/addInfoAction';\nimport {getImages} from '../../actions/imagesAction';\nimport {connect} from \"react-redux\";\nimport {decStepper, incStepper} from '../../actions/stepperAction';\n\nconst StepperContainer = (props) => {\n    const { user, images, getImages, getOptions, decStepper, incStepper, addLocation} = props;\n    useEffect(() => {\n        if(user){\n            getOptions();\n            getImages(user.id);\n        }\n    }, []);\n    const handleBack = () => {\n        decStepper();\n    }\n    const handleNext = () => {\n        if(user.complete === 2)\n            addLocation({lat: user.lat, lng: user.long});\n        incStepper();\n    }\n    return (\n        <Stepper handleBack={handleBack} handleNext={handleNext} user={user} images={images}/>\n    )\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"user\": state.user,\n    \"images\" : state.images,\n});\nconst mapDispatchToProps = {\n    \"getOptions\": getOptions,\n    \"getImages\" : getImages,\n    \"decStepper\": decStepper,\n    \"incStepper\": incStepper,\n    \"addLocation\": addLocation,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StepperContainer);","export const INC_STEPPER = \"INC_STEPPER\";\nexport const DEC_STEPPER = \"DEC_STEPPER\";\nexport const INC_STEPPER_SUCCESS= \"INC_STEPPER_SUCCESS\";\nexport const incStepper= () => ({\n  \"type\": INC_STEPPER\n});\n\nexport const decStepper = () => ({\n    \"type\": DEC_STEPPER,\n});\nexport const incStepperSuccess = () => ({\n  \"type\": INC_STEPPER_SUCCESS,\n});","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\nimport defaultImg from '../../image/default.jpg';\nimport ReactIdSwiperCustom from 'react-id-swiper/lib/ReactIdSwiper.custom';\nimport { Swiper, Navigation, Pagination } from 'swiper/js/swiper.esm';\nimport { Grid } from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '10px',\n    boxShadow: 3,\n  },\n  card: {\n    maxWidth: 400,\n    maxHeight:600,\n    borderRadius : '20px',\n    backgroundColor: '#E6EAEA',\n  },\n  cardMedia : {\n    maxWidth: 400,\n    maxHeight : 250,\n  },\n  cardHeader : {\n    maxWidth: 400,\n    maxHeight : 100,\n  },\n  cardContent : {\n    maxWidth: 400,\n    maxHeight : 200,\n  },\n  cardAction : {\n    maxWidth: 400,\n    maxHeight : 50,\n  },\n  avatarON: {\n    backgroundColor: '#00FB0C',\n    width: 15,\n    height: 15,\n  },\n  avatarOF: {\n    backgroundColor: '#e42416',\n    width: 15,\n    height: 15,\n  },\n  chip: {\n    marginRight: '5px',\n  },\n}));\n\nexport default function ViewProfile(props) {\n  const {user,images,interests} = props;\n  const classes = useStyles();\n  const value = user.rating;\n  const params = {\n    Swiper,\n    modules: [Navigation, Pagination],\n    pagination: {\n      el: '.swiper-pagination',\n      type: 'bullets',\n      clickable: true,\n    },\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl:  '.swiper-button-prev'\n    },\n    spaceBetween: 30 \n  }\n  return (\n    <Grid container justify='center'>\n    <Card  className={classes.card}>\n      <CardHeader\n      className={classes.cardHeader}\n      action={ \n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n        <div className={classes.rating1}>\n          <Rating\n            name=\"read-only\"\n            value={value}\n            precision={0.5}\n            readOnly\n          />\n          \n        </div>\n        </Box>\n        \n        }\n        avatar={\n          <Avatar aria-label=\"recipe\" className={user.isOnline === 1 ? classes.avatarON : classes.avatarOF}>\n              \n          </Avatar>\n          \n        }\n        title={user.firstname +' ' + user.lastname + ' @'+user.username}\n        subheader={user.isOnline === 1 ? 'Online' : 'Offline' + user.lastSignIn}\n      >\n     \n      </CardHeader>\n      \n      <CardMedia\n      className={classes.cardMedia}\n        children={\n            <ReactIdSwiperCustom {...params}>\n                {\n                    images.isImages ? images.images.map((tile) =>\n                    <div key={tile.id}>\n                        <img  style={{width: \"100%\",height:\"250px\"}} src={`http://localhost:5000/images/${tile.path}`} alt=\"images\"/>\n                    </div>\n                    ) : <img  style={{width: \"100%\",height:\"250px\"}} src={defaultImg} alt=\"images\"/>\n                }\n                </ReactIdSwiperCustom>\n        }\n      \n      />\n      <CardContent className={classes.cardContent}>\n        <Typography >\n          <strong>AGE :</strong>{user.age}\n        </Typography>\n        <Typography >\n          <strong>GENDER :</strong>{user.gender}\n        </Typography>\n        <Typography >\n          <strong>INTERESTED IN :</strong>{user.sexOrient}\n        </Typography>\n        <Typography component={'span'}>\n          <strong>TAGS :</strong> {interests != null &&  interests.map((item, index) =><Chip key={index} className={classes.chip} label={item.value} />)}\n        </Typography>\n        <Typography >\n          <strong>BIO :</strong> {user.bio} \n        </Typography>\n      </CardContent>\n      \n    </Card>\n    </Grid>\n  );\n}\n","\nimport React from 'react';\nimport {connect} from \"react-redux\";\nimport ViewProfile from '../../components/Profile/viewProfile'\n\nconst ViewProfileContainer = (props) => {\n    const {user,images} = props;\n    \n    return (\n        <div>\n            <ViewProfile user={user} images={images} interests={user.interests}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"user\" : state.user,\n    \"images\" : state.images,\n});\nconst mapDispatchToProps = {\n    \n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewProfileContainer);","import React, {useState}  from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport GoogleMapReact from 'google-map-react';\nimport RoomRoundedIcon from '@material-ui/icons/RoomRounded';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%'\n    },\n    form: {\n        height: '40vh',\n        width: '100%',\n        marginTop: theme.spacing(2),\n    },\n    submit: {\n        margin: theme.spacing(2, 0, 2),\n        backgroundColor: theme.palette.secondary.main,\n    },\n}));\n\nconst Localisation = (props) => {\n    const {userL, setLocation, isMarker, handleSubmit} = props;\n\n    const classes = useStyles();\n\n    const [marker, setMarker] = useState(userL);\n\n    const AnyReactComponent = ({ text }) => <div>{text}</div>;\n\n    const handleClick = ({lat, lng}) => {\n        setMarker({lat, lng})\n        setLocation({lat, lng});\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n                <div className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\n                        Localisation\n                    </Typography>\n                    <Typography color=\"inherit\"> Click to set your location.</Typography>\n                    <div  className={classes.form}>\n                        <GoogleMapReact\n                            bootstrapURLKeys={{ key:'AIzaSyBeEUF7eMgjoDA6n4pfupjcBByH11i7yY8'}}\n                            center={{lat: userL.lat, lng: userL.lng}}\n                            defaultZoom={13}\n                            onClick={handleClick}\n                        >\n                        {marker && isMarker === true && <AnyReactComponent\n                            lat={marker.lat}\n                            lng={marker.lng}\n                            text={<RoomRoundedIcon color=\"secondary\"/>}\n                        />}\n                        </GoogleMapReact>\n                    </div>\n                    <Button  onClick={handleSubmit} className={classes.submit} fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" name=\"submit\" value=\"ok\" >Submit</Button>\n                </div>\n        </Container>\n    );\n}\n\nexport default Localisation;","import React, { Component } from 'react';\nimport Maps from '../../components/Profile/maps';\nimport {connect} from \"react-redux\";\nimport {getLoc, addLocation, addLocationSuccess} from '../../actions/addInfoAction';\n\nclass MapsContainer extends Component{\n    componentDidMount(){\n        this.props.getLoc();\n    }\n    render(){\n        const userLocation = {lat: this.props.user.lat, lng: this.props.user.long}\n        const setLocation = ({lat, lng}) => {\n            const marker = true;\n            this.props.addLocationSuccess({marker, lat, lng});\n        }\n        const handleSubmit = () => {\n            this.props.addLocation({lat: this.props.user.lat, lng: this.props.user.long});\n        }\n        if(!this.props.user.lat)\n            return null;\n        return (\n            <Maps isMarker={this.props.user.marker} setLocation={setLocation} userL={userLocation} handleSubmit={handleSubmit}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"user\": state.user,\n});\nconst mapDispatchToProps = {\n    \"getLoc\": getLoc,\n    \"addLocationSuccess\": addLocationSuccess,\n    \"addLocation\": addLocation,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapsContainer);","import React from 'react';\nimport { Field} from 'redux-form';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Button from '@material-ui/core/Button';\nimport CreatableSelect from 'react-select/creatable';\nimport { makeStyles } from '@material-ui/core/styles';\nimport renderField from '../commun/TextField'\nimport RadioGroup from '../commun/RadioGroup';\nimport MyFlash from '../commun/flash';\n\nconst useStyles = makeStyles(theme => ({  \n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%'\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(2, 0, 2),\n        backgroundColor: theme.palette.secondary.main,\n    },\n}));\n\nconst renderDatepicker = ({input, label, meta : { touched, error}}\n    ) => (\n        <TextField\n            {...input}\n            type = 'date'\n            label = {label}\n            error = {touched && (error ? true : false)}\n            helperText={touched && error}\n            fullWidth\n            InputLabelProps={{\n              shrink: true,\n            }}\n        />\n  )\n\nconst ProfileInfo = (props) => {\n    const {handleSubmit, selectLoading, selectOptions, selectError, createOption} = props;\n    const classes = useStyles();\n\n    const handleCreate =  (value) => {\n      createOption(value);\n    }\n  \n    const sel = ({ input, meta: { touched, error }}) => (\n      <div>\n        <CreatableSelect\n          {...input}\n          isMulti\n          isDisabled={selectLoading}\n          isLoading={selectLoading}\n          isClearable={false}\n          options={selectOptions}\n          onBlur={() => input.onBlur(input.value)}\n          onChange={(value) => { input.onChange(value) }}\n          onCreateOption={handleCreate}\n        />\n        <div>{(touched && error) &&\n          <div style={{'fontSize':'12px','color':'rgb(244, 67, 54)'}}>{error}</div>}\n        </div>\n      </div>\n    );\n    return (\n    <div>\n      {selectError && <MyFlash msg={selectError} variant=\"error\"/>}\n        <form>\n            <Grid container justify=\"center\" spacing={2}>\n              <Grid item xs={5}>\n              <FormLabel  component=\"legend\">Firstname</FormLabel>\n                  <Field\n                      name=\"firstname\"\n                      component={renderField}\n                      type = \"text\"\n                      rows='1'\n                  />\n              </Grid>\n              <Grid item xs={5}>\n              <FormLabel  component=\"legend\">Lastname</FormLabel>\n                  <Field\n                      name=\"lastname\"\n                      component={renderField}\n                      type = \"text\"\n                      rows='1'\n                  />\n              </Grid>\n              <Grid item xs={5}>\n              <FormLabel  component=\"legend\">Username</FormLabel>\n                  <Field\n                      name=\"username\"\n                      component={renderField}\n                      type = \"text\"\n                      rows='1'\n                  />\n              </Grid>\n              <Grid item xs={5}>\n              <FormLabel  component=\"legend\">Email</FormLabel>\n                  <Field\n                      name=\"email\"\n                      component={renderField}\n                      type = \"email\"\n                      rows='1'\n                  />\n              </Grid>\n              <Grid item xs={5}>\n                <FormLabel component=\"legend\">Gender</FormLabel>\n                <Field component={RadioGroup} name=\"gender\" required={true} options={[\n                      { title: 'Male', value: 'male' },\n                      { title: 'Female', value: 'female' }\n                    ]}\n                />\n              </Grid>\n              <Grid item xs={5}>\n                <FormLabel component=\"legend\">Birthday</FormLabel>\n                <Field\n                  name=\"birthday\"\n                  component={renderDatepicker}\n                />\n              </Grid>\n              <Grid item xs={5}>\n              <FormLabel component=\"legend\">Match with</FormLabel>\n                <Field component={RadioGroup} name=\"sexOrient\" required={true} options={[\n                      { title:  'Men ' , value: 'men'  },\n                      { title:  'Women', value: 'women'},\n                      { title:  'Both' , value: 'both' }\n                    ]}\n                />\n              </Grid>\n              <Grid item xs={5}>\n                <FormLabel component=\"legend\">Interests</FormLabel>\n                <Field name='interests' component={sel}/>\n              </Grid>\n              <Grid  item xs={10}>\n                <FormLabel  component=\"legend\">Bio</FormLabel>\n                <Field\n                  name=\"bio\"\n                  component={renderField}\n                  type = \"text\"\n                  rows='4'\n                  variant='outlined'\n                />\n              </Grid> \n              <Grid item xs={5}>\n              <FormLabel  component=\"legend\">New password</FormLabel>\n                  <Field\n                      name=\"password\"\n                      component={renderField}\n                      type = \"password\"\n                      rows='1'\n                  />\n              </Grid>\n              <Grid item xs={5}>\n              <FormLabel  component=\"legend\">Confirm new password</FormLabel>\n                  <Field\n                      name=\"confirmPassword\"\n                      component={renderField}\n                      type = \"password\"\n                      rows='1'\n                  />\n              </Grid>        \n              <Grid item container justify='center' xs={3}>\n                <Button  onClick={handleSubmit} className={classes.submit} fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" name=\"submit\" value=\"ok\" >Submit</Button>\n              </Grid>\n            </Grid>\n        </form>\n    </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\nimport ProfileInfo from '../../components/Profile/profileInfo';\nimport Age from '../../components/commun/age';\nimport {editInfo} from '../../actions/profileAction';\nimport {createOption} from '../../actions/addInfoAction';\n\nlet profileInfoContainer = (props) => {\n    return(\n        <ProfileInfo\n            handleSubmit={props.handleSubmit}\n            selectLoading={props.selectLoading}\n            selectOptions={props.selectOptions}\n            selectError={props.selectError}\n            createOption={props.createOption}\n        />\n    )\n}\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        \"firstname\",\n        \"lastname\",\n        \"username\",\n        \"email\",\n        'gender',\n        'birthday',\n        'sexOrient',\n        'bio',\n    ];\n    const requiredArr = [\n        'interests'\n    ];\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n    requiredArr.forEach(field => {\n        if (!values[field]) {\n            errors[field] = 'Required !';\n        }\n    });\n\n    if(values.bio && !/^.{1,200}$/.test(values.bio))\n        errors.bio = 'maximum 200 characters';\n\n    if(values.birthday && !/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/.test(values.birthday))\n        errors.birthday = 'Invalid date !';\n\n    const age = Age(values.birthday)\n    if(age < 18)\n        errors.birthday = \"Come back when you're 18 ;)\";\n    if(age > 120)\n        errors.birthday = 'Invalid age !';\n    if(values.username && !/^[a-z0-9_-]{2,20}$/.test(values.username))\n        errors.username = 'Username can contain 2-20 characters, letters (a-z), numbers, \"_\" and \"-\"';\n    if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email))\n        errors.email = \"Invalid email address !\";\n    if(values.password && !/\\d/.test(values.password))\n        errors.password = \"Password must contain a number !\";\n    else if(values.password && !/[A-Z]/.test(values.password))\n        errors.password = \"Password must contain an uppercase letter !\";\n    else if(values.password && !/[a-z]/.test(values.password))\n        errors.password = \"Password must contain a lowercase letter !\";\n    else if(values.password && !/[ !@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/.test(values.password))\n        errors.password = \"Password must contain a special character !\";\n    else if(values.password && !/[a-zA-Z0-9 !@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/? ]{8,20}/.test(values.password))\n        errors.password = \"Password must contain at least 8 characters !\";\n    if('password' in values && !values.confirmPassword)\n        errors.confirmPassword = \"Required !\";\n    if(values.confirmPassword && values.password !== values.confirmPassword)\n        errors.confirmPassword = \"Passwords does not match !\";\n    return errors;\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    'selectOptions': state.addInfo.selectOptions,\n    'selectLoading': state.addInfo.selectLoading,\n    'selectError' : state.addInfo.error,\n});\nconst mapDispatchToProps = {\n    \"editInfo\": editInfo,\n    \"createOption\": createOption,\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit((values) => {\n        dispatchProps.editInfo(values);\n        delete values.password;\n        delete values.confirmPassword;\n    }),\n});\n\nprofileInfoContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(profileInfoContainer);\n\nprofileInfoContainer = reduxForm({\n    'form' :'profileInfo',\n    validate,\n})(profileInfoContainer);\n\nprofileInfoContainer = connect(\n    state => ({\n        initialValues: {\n            firstname: state.user.firstname,\n            lastname: state.user.lastname,\n            username: state.user.username,\n            email: state.user.email,\n            gender: state.user.gender,\n            birthday: state.user.birthday,\n            sexOrient: state.user.sexOrient,\n            interests: state.user.interests,\n            bio: state.user.bio,\n        },\n    }),\n)(profileInfoContainer);\n\nexport default profileInfoContainer;\n","export const EDIT_INFO = \"EDIT_INFO\";\n\nexport const EDIT_INFO_SUCCESS = \"EDIT_INFO_SUCCESS\";\n\nexport const EDIT_INFO_ERROR = \"EDIT_INFO_ERROR\";\n\nexport const editInfo = (data) => ({\n    \"type\": EDIT_INFO,\n    \"data\": data,\n});\n\nexport const editInfoSuccess = (info) => ({\n    \"type\": EDIT_INFO_SUCCESS,\n    \"info\": info\n});\n\nexport const editInfoError = (error) => ({\n    \"type\": EDIT_INFO_ERROR,\n    error\n});","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlaceTwoToneIcon from '@material-ui/icons/PlaceTwoTone';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircleTwoToneIcon from '@material-ui/icons/AccountCircleTwoTone';\nimport { red } from '@material-ui/core/colors';\nimport MonochromePhotosTwoToneIcon from '@material-ui/icons/MonochromePhotosTwoTone';\nimport VisibilityTwoToneIcon from '@material-ui/icons/VisibilityTwoTone';\nimport ViewProfile from '../../containers/Profile/viewProfile';\nimport Photos from '../../containers/completeProfile/pictures';\nimport Maps from '../../containers/Profile/maps';\nimport ProfileInfo from '../../containers/Profile/profileInfo';\n\nconst useStyles = makeStyles(theme => ({\n  root1: {\n    flexGrow: 1,\n  },\n  card: {\n    maxWidth: 500,\n\n  },\n  avatar: {\n    backgroundColor: red[500],\n    width: 150,\n height: 150,\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n}));\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nexport default function SimpleContainer() {\n    const [value, setValue] = React.useState(0);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const classes = useStyles();\n    return (\n    <React.Fragment>\n      <Grid container  justify=\"center\">\n        \n        <Grid item xs={12} sm={12}>\n          <Paper square className={classes.root1}>\n            <Tabs value={value} onChange={handleChange} variant=\"fullWidth\" indicatorColor=\"primary\" textColor=\"secondary\">\n              <Tab icon={<AccountCircleTwoToneIcon />} label=\"INFOS\" id ='0'/>\n              <Tab icon={<MonochromePhotosTwoToneIcon />} label=\"PHOTOS\" id='1'/>\n              <Tab icon={<PlaceTwoToneIcon />} label=\"LOCALISATION\" id='2'/>\n              <Tab icon={<VisibilityTwoToneIcon />} label=\"VIEW PROFILE\" id='3'/>\n            </Tabs>\n            <TabPanel value={value} index={0}><ProfileInfo /></TabPanel>\n            <TabPanel value={value} index={1}><Photos/></TabPanel>\n            <TabPanel value={value} index={2}><Maps/></TabPanel>\n            <TabPanel value={value} index={3}><ViewProfile/></TabPanel>\n          </Paper>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React ,{ useEffect }from 'react';\nimport Profile from '../../components/Profile'\nimport {getOptions} from '../../actions/addInfoAction'\nimport {getImages} from '../../actions/imagesAction';\nimport {connect} from \"react-redux\";\n\nconst ProfileContainer = (props) => {\n    const {user,getImages, getOptions} = props;\n    useEffect(() => {\n        if(user){\n            getOptions();\n            getImages(user.id);\n        }\n    }, []);\n    return (\n        <div>\n            <Profile />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"user\": state.user,\n    \n});\nconst mapDispatchToProps = {\n    \"getImages\" : getImages,\n    \"getOptions\": getOptions,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContainer);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Grid} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport SupervisedUserCircleOutlinedIcon from '@material-ui/icons/SupervisedUserCircleOutlined';\nimport SupervisedUserCircleRoundedIcon from '@material-ui/icons/SupervisedUserCircleRounded';\nimport BlockIcon from '@material-ui/icons/Block';\n\n const useStyles = makeStyles(theme => ({\n   root: {\n    width: '100%',\n    maxWidth: 360,\n    position: 'relative',\n    overflow: 'auto',\n    maxHeight: 550,\n    borderRadius : '15px',\n    backgroundColor: '#E6EAEA',\n    margin: '10px'\n   },\n   large: {\n     width: 75,\n     height: 75,\n     margin: 10\n   },\n }));\n\n export default function Activity(props) {\n   const {likedByList, viewProfileList, blockList, handleLike, handleDeblock,likeList,handleDislike} = props;\n   const classes = useStyles();\n\n   return (\n  <>\n     <Grid container justify=\"center\">\n       <List className={classes.root}> \n       <Typography component=\"h1\" variant=\"h4\" align=\"center\" color='primary'>\n            You blocked\n        </Typography>\n       {blockList.isUsers === true && blockList.users.map((value) => ( \n           <ListItem key={value.id} button>\n             <ListItemAvatar>\n               <Avatar\n               className={classes.large}\n                 alt='Avatar'\n                 src={`http://localhost:5000/images/${value.profilePic}`}\n               />\n             </ListItemAvatar>\n             <ListItemText id={value.id} >{value.firstname + '  ' + value.lastname}</ListItemText>\n             <ListItemSecondaryAction>\n              <Tooltip title =\"Unblock\"><IconButton aria-label=\"unblock\"  onClick={(e) => handleDeblock(value.id)}>\n                <BlockIcon  color=\"secondary\"/>\n              </IconButton></Tooltip>\n             </ListItemSecondaryAction>\n           </ListItem>\n       ))}\n     </List>\n     <List className={classes.root}> \n     <Typography component=\"h1\" variant=\"h4\" align=\"center\" color='primary'>\n            You like\n        </Typography>\n       {likeList.isUsers === true && likeList.users.map((value) => ( \n           <ListItem key={value.id} button>\n             <ListItemAvatar>\n               <Avatar\n               className={classes.large}\n                 alt='Avatar'\n                 src={`http://localhost:5000/images/${value.profilePic}`}\n               />\n             </ListItemAvatar>\n             <ListItemText id={value.id} >{value.firstname + '  ' + value.lastname}</ListItemText>\n             <ListItemSecondaryAction>\n             {value.like === 'iLike' &&\n              <Tooltip title =\"Unlike\"><IconButton aria-label=\"Unlike\"  onClick={(e) => handleDislike(value.id)}>\n                <FavoriteIcon  color=\"secondary\"/>\n              </IconButton></Tooltip>\n              }\n              {value.like === 'match' &&\n                <Tooltip title =\"Unmatch\"><IconButton aria-label=\"Unmatch\"  onClick={(e) => handleDislike(value.id)}>\n                  <SupervisedUserCircleRoundedIcon color=\"primary\"/>\n                </IconButton></Tooltip>\n              }\n             </ListItemSecondaryAction>\n           </ListItem>\n       ))}\n     </List>\n     <List className={classes.root}> \n     <Typography component=\"h1\" variant=\"h4\" align=\"center\" color='primary'>\n            You're liked by\n        </Typography>\n       {likedByList.isUsers === true && likedByList.users.map((value) => ( \n           <ListItem key={value.id} button>\n             <ListItemAvatar>\n               <Avatar\n               className={classes.large}\n                 alt='Avatar'\n                 src={`http://localhost:5000/images/${value.profilePic}`}\n               />\n             </ListItemAvatar>\n             <ListItemText id={value.id} >{value.firstname + ' ' + value.lastname}</ListItemText>\n             <ListItemSecondaryAction>\n             {value.like === 'heLiked' &&\n                <Tooltip title =\"Like back\"><IconButton aria-label=\"Like back\"  onClick={(e) => handleLike(value.id)}>\n                  <SupervisedUserCircleOutlinedIcon color=\"primary\"/>\n                </IconButton></Tooltip>\n              }\n              {value.like === 'match' &&\n                <Tooltip title =\"Unmatch\"><IconButton aria-label=\"Unmatch\"  onClick={(e) => handleDislike(value.id)}>\n                  <SupervisedUserCircleRoundedIcon color=\"primary\"/>\n                </IconButton></Tooltip>\n              }\n             </ListItemSecondaryAction>\n           </ListItem>\n       ))}\n     </List>\n     <List className={classes.root}>\n       <Typography component=\"h1\" variant=\"h4\" align=\"center\" color='primary'>\n            Profile views\n        </Typography>\n       {viewProfileList.isUsers === true && viewProfileList.users.map((value) => (\n           <ListItem key={value.id} button>\n             <ListItemAvatar>\n               <Avatar\n               className={classes.large}\n                 alt='Avatar'\n                 src={`http://localhost:5000/images/${value.profilePic}`}\n               />\n             </ListItemAvatar>\n             <ListItemText id={value.id} >{value.firstname + '  ' + value.lastname}</ListItemText>\n             <ListItemSecondaryAction>\n             {value.like === null &&\n                <Tooltip title =\"Like\"><IconButton aria-label=\"Like\"  onClick={(e) => handleLike(value.id)}>\n                  <FavoriteBorderIcon color=\"secondary\"/>\n                </IconButton></Tooltip>\n              }\n              {value.like === 'iLike' &&\n              <Tooltip title =\"Unlike\"><IconButton aria-label=\"Unlike\"  onClick={(e) => handleDislike(value.id)}>\n                <FavoriteIcon  color=\"secondary\"/>\n              </IconButton></Tooltip>\n              }\n              {value.like === 'heLiked' &&\n                <Tooltip title =\"Like back\"><IconButton aria-label=\"Like back\"  onClick={(e) => handleLike(value.id)}>\n                  <SupervisedUserCircleOutlinedIcon color=\"primary\"/>\n                </IconButton></Tooltip>\n              }\n              {value.like === 'match' &&\n                <Tooltip title =\"Unmatch\"><IconButton aria-label=\"Unmatch\"  onClick={(e) => handleDislike(value.id)}>\n                  <SupervisedUserCircleRoundedIcon color=\"primary\"/>\n                </IconButton></Tooltip>\n              }\n             </ListItemSecondaryAction>\n           </ListItem>\n       ))}\n     </List>\n   </Grid>\n  </>\n   );\n }","import React, {useEffect} from 'react'\nimport {connect} from \"react-redux\";\nimport Activity from '../../components/Activity';\nimport {getBlockUser,deblockUser,getLikeUser,dislikeUserAct, getViewProfileList, likeUser, getLikedBy} from '../../actions/userAction';\n\nconst ActivityContainer = (props) => {\n    const {getLikedBy, likedByList, likeUser, viewProfileList, getViewProfileList,getBlockUser,blockList,deblockUser,getLikeUser,dislikeUserAct,likeList} = props;\n    useEffect(() => {\n        getViewProfileList();\n        getBlockUser();\n        getLikeUser();\n        getLikedBy();\n}, []);\n    const handleDeblock = (deblocked_user_id) => {\n        deblockUser(deblocked_user_id);\n    }\n    const handleDislike= (dislike_user_id) => {\n        dislikeUserAct(dislike_user_id);\n    }\n    const handleLike = (liked_user_id) => {\n        likeUser(liked_user_id);\n    }\n    return (\n        <div>\n            <Activity likedByList={likedByList} viewProfileList={viewProfileList} blockList={blockList} handleLike={handleLike} handleDeblock={handleDeblock} handleDislike={handleDislike} likeList={likeList}/>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => (\n{\n    \"user\": state.user,\n    \"blockList\" : state.blockList,\n    \"likeList\" : state.likeList,\n    \"viewProfileList\": state.viewProfileList,\n    \"likedByList\": state.likedByList,\n});\nconst mapDispatchToProps = {\n    \"getBlockUser\" : getBlockUser,\n    \"deblockUser\" : deblockUser,\n    \"getLikeUser\" : getLikeUser,\n    \"dislikeUserAct\" : dislikeUserAct,\n    \"likeUser\": likeUser,\n    \"getViewProfileList\": getViewProfileList,\n    \"getLikedBy\": getLikedBy,\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ActivityContainer);","import React, {useState} from 'react';\nimport './chat.css';\nimport MyFlash from '../commun/flash'\n\nconst Conversations = (props) => {\n    const {handleSelectConversation, selected, conversations} = props;\n    return(\n        <div id=\"sidepanel\">\n            <div id=\"contacts\">\n                <ul>\n                    {selected && conversations.map(item => (\n                        <li onClick={() => handleSelectConversation(item.id)} key={item.id} className={selected.id === item.id ? \"contact active\": \"contact\"}>\n                            <div className=\"wrap\">\n                                <span className={item.isOnline === 1 ? \"contact-status online\" : \"contact-status offline\"}></span>\n                                    <img src={`http://localhost:5000/images/${item.path}`} alt={item.lastname} />\n                                    <div className=\"meta\">\n                                        <p className=\"name\">{item.firstname} {item.lastname}</p>\n                                    </div>\n                            </div>\n                        </li>\n                    ))\n                    }\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nconst ConvTitle = (props) => {\n    const {selected} = props;\n    return(\n        <div className=\"contact-profile\">\n            <img src={`http://localhost:5000/images/${selected.path}`} alt={selected.lastname}/>\n            <p>{selected.firstname} {selected.lastname}</p>\n        </div>\n    );\n}\n\nconst Messages = (props) => {\n    const {selected} = props;\n    return(\n        <div className=\"messages\">\n            <ul>\n                {selected.messages && selected.messages.length > 0 && selected.messages.map(item => (\n                    <li key={Math.random()} className={item.isMyMessage ? \"sent\" : \"replies\"}>\n                        <img src={`http://localhost:5000/images/${item.path}`} alt={item.image} />\n                        <p>{item.message}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nconst SendMessage = (props) => {\n    const {handleSendMessage, selected, dis} = props;\n    const [message, setMessage] = useState(\"\");\n    const handleChange = e => setMessage(e.target.value);\n    const handleSubmit = form => {\n        form.preventDefault();\n        if (message.length > 255) setMessage(\"\");\n        else if (message) {\n            handleSendMessage(selected.id, message);\n            let cont = document.querySelector('.messages');\n            const height = cont.scrollHeight;\n            cont.scrollTo(0, height);\n            setMessage(\"\");\n        }\n        document.querySelector('.message-input input').value = null;\n    }\n    return(\n        <div className=\"message-input\">\n            <div className=\"wrap\">\n                <form onSubmit={handleSubmit}>\n                    <input onChange={handleChange} type=\"text\" placeholder=\"Write your message...\" disabled={dis}/>\n                    <button  type=\"submit\" className=\"submit\">Send</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nconst Content = (props) => {\n    const {handleSendMessage, selected, dis} = props;\n    return(\n        <div className=\"content\">\n            {Object.keys(selected).length > 0 ? (\n            <>\n                <ConvTitle selected={selected}/>\n                <Messages selected={selected}/>\n                <SendMessage dis={dis} handleSendMessage={handleSendMessage} selected={selected}/>\n            </> ) :\n                <p id=\"selectCon\">Select a conversation</p>\n            }\n        </div>\n    );\n}\n\nconst Chat = (props) => {\n    const {handleSelectConversation, err, handleSendMessage, selected, conversations} = props;\n    let disable = false;\n    if(err)\n        disable = true;\n    return(\n    <div id=\"frame\">\n        {err && <MyFlash variant=\"error\" msg={[err]}/>}\n        {conversations.length > 0 ? (\n        <>\n            <Conversations handleSelectConversation={handleSelectConversation} selected={selected} conversations={conversations}/>\n            <Content dis={disable} handleSendMessage={handleSendMessage} selected={selected} conversations={conversations}/>\n        </> ) : \n            <p id=\"noMatches\">No matches</p>\n        }\n    </div>\n    );\n}\n\nexport default Chat;","export const GET_CONVERSATIONS = \"GET_CONVERSATIONS\";\n\nexport const GET_CONVERSATIONS_SUCCESS = \"GET_CONVERSATIONS_SUCCESS\"\n\nexport const GET_CONVERSATIONS_ERROR = \"GET_CONVERSATIONS_ERROR\"\n\nexport const SELECT_CONVERSATION = \"SELECT_CONVERSATION\";\n\nexport const LOAD_MESSAGES = \"LOAD_MESSAGES\";\n\nexport const LOAD_MESSAGES_SUCCESS = \"LOAD_MESSAGES_SUCCESS\";\n\nexport const LOAD_MESSAGES_ERROR = \"LOAD_MESSAGES_ERROR\";\n\nexport const SEND_MESSAGE = \"SEND_MESSAGE\";\n\nexport const SEND_MESSAGE_SUCCESS = \"SEND_MESSAGE_SUCCESS\";\n\nexport const SEND_MESSAGE_ERROR = \"SEND_MESSAGE_ERROR\";\n\nexport const RECEIVE_MESSAGE = \"RECEIVE_MESSAGE\";\n\nexport const GetConversations = () => ({\n    \"type\": GET_CONVERSATIONS,\n});\n\nexport const getConverSuccess = (data) => ({\n    \"type\": GET_CONVERSATIONS_SUCCESS,\n    data: data,\n});\n\nexport const getConverError = (err) => ({\n    \"type\": GET_CONVERSATIONS_ERROR,\n    err: err,\n});\n\nexport const SelectConversation = (id) => ({\n    \"type\": SELECT_CONVERSATION,\n    id: id,\n});\n\nexport const LoadMessages = (conv_id) => ({\n    \"type\": LOAD_MESSAGES,\n    conv_id: conv_id,\n});\n\nexport const LoadMessagesSuccess = (data, conv_id) => ({\n    \"type\": LOAD_MESSAGES_SUCCESS,\n    data: data,\n    conv_id: conv_id,\n});\n\nexport const LoadMessagesError = (err) => ({\n    \"type\": LOAD_MESSAGES_ERROR,\n    err: err,\n});\n\nexport const SendMessage = (id, profilePic, message) => ({\n    \"type\": SEND_MESSAGE,\n    id: id,\n    profilePic: profilePic,\n    message: message,\n});\n\nexport const SendMessageSuccess = (id, profilePic, message) => ({\n    \"type\": SEND_MESSAGE_SUCCESS,\n    id: id,\n    profilePic: profilePic,\n    message: message,\n});\n\nexport const SendMessageError = (conv_id, err) => ({\n    \"type\": SEND_MESSAGE_ERROR,\n    conv_id: conv_id,\n    err: err,\n});\n\nexport const ReceiveMsg = (data) => ({\n    \"type\": RECEIVE_MESSAGE,\n    data: data,\n});","import io from \"socket.io-client\";\n\nlet socket = io(\"http://localhost:5000\");\n\nexport default socket;","import React, { useEffect } from 'react';\nimport {connect} from \"react-redux\";\nimport Chat from '../../components/Chat';\nimport {GetConversations, SelectConversation, SendMessage, LoadMessages, ReceiveMsg, SendMessageSuccess} from '../../actions/chatAction';\nimport { resetState } from '../../actions/resetStateAction';\nimport socket from '../../socketConn';\n\nconst ChatContainer = (props) => {\n    const {sendMsgSuccess, reset, user, err, getConversations, selectedConversation, conversations, selectConversation, loadMessages, sendMessage, receiveMsg} = props\n    useEffect(() => {\n        if(user){\n            getConversations();\n        }\n        socket.on('new_msg', function(data){\n            receiveMsg(data);\n            let cont = document.querySelector('.messages');\n            if(cont){\n                const height = cont.scrollHeight;\n                cont.scrollTo(0, height);\n            }\n        });\n        socket.on('received', function(data){\n            sendMsgSuccess(data.receiver, data.profilePic, data.message);\n            let cont = document.querySelector('.messages');\n            if(cont){\n                const height = cont.scrollHeight;\n                cont.scrollTo(0, height);\n            }\n        });\n        return () => reset()\n    }, []);\n\n    const handleSelectConversation = (id) => {\n        selectConversation(id);\n        loadMessages(id);\n    }\n    const handleSendMessage = (id, message) => {\n        sendMessage(id, user.profilePic, message);\n    }\n    return (\n        <Chat\n            handleSelectConversation={handleSelectConversation}\n            handleSendMessage={handleSendMessage}\n            selected={selectedConversation}\n            conversations={conversations}\n            err={err}\n        />\n    )\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"user\": state.user,\n    \"selectedConversation\": state.chat.selectedConversation,\n    \"conversations\": state.chat.conversations,\n    \"err\": state.chat.err,\n});\nconst mapDispatchToProps = {\n    \"selectConversation\": SelectConversation,\n    \"sendMessage\": SendMessage,\n    \"sendMsgSuccess\": SendMessageSuccess,\n    \"getConversations\": GetConversations,\n    \"loadMessages\": LoadMessages,\n    \"reset\": resetState,\n    \"receiveMsg\": ReceiveMsg,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatContainer);","import React, {useEffect} from 'react'\nimport {connect} from \"react-redux\";\nimport Notif from '../../components/Notif';\n\nconst NotifCont = (props) => {\n    const {notifList}  = props;\n    useEffect(() => {\n    }, []);\n    return (\n        <div>\n            <Notif notifList={notifList}/>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => (\n{\n    \"user\": state.user,\n    \"notifList\": state.notif.notifications,\n});\nconst mapDispatchToProps = {\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(NotifCont);","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Route, Switch} from 'react-router-dom';\nimport RegisterContainer from '../containers/Register';\nimport Browse from '../containers/Browse';\nimport loginContainer from '../containers/Login';\nimport NotFoundPage from '../components/NotFoundPage';\nimport ForgotPasswordContainer from '../containers/sendEmail';\nimport EmailConfirmCont from '../containers/emailConfirmation';\nimport ResetPasswordContainer from '../containers/resetPassword';\nimport CompleteProfile from '../containers/completeProfile/stepper';\nimport Profile from '../containers/Profile';\nimport Activity from '../containers/Activity';\nimport Chat from '../containers/Chat';\nimport Notif from '../containers/Notif';\nimport MyFlash from '../components/commun/flash';\n\nconst Routes = (props) => {\n    const {user, notif} = props;\n    return (\n        <>\n            {notif && <MyFlash variant=\"info\" msg={[notif]}/>}\n            <Switch>\n                <Route exact path=\"/confirmation/:token\"  component={user === null ? EmailConfirmCont : (user.complete === 3 ? Profile : CompleteProfile)}/>\n                <Route exact path=\"/resetPassword/:token\"  component={user === null ? ResetPasswordContainer  : (user.complete === 3 ? Profile : CompleteProfile)}/>\n                <Route exact path=\"/forgotPassword\"  component={user === null ? ForgotPasswordContainer  : (user.complete === 3 ? Profile : CompleteProfile)}/>\n                <Route exact path=\"/register\"  component={user === null ? RegisterContainer  : (user.complete === 3 ? Profile : CompleteProfile)} />\n                <Route exact path=\"/login\"  component={user === null ? loginContainer  : (user.complete === 3 ? Profile : CompleteProfile)}/>\n                <Route exact path=\"/\" component={user !== null  ? (user.complete === 3 ? Profile : CompleteProfile) : loginContainer }/>\n                <Route exact path=\"/profile\" component={user !== null  ? (user.complete === 3 ? Profile : CompleteProfile) : loginContainer }/>\n                <Route exact path=\"/activity\" component={user !== null  ? (user.complete === 3 ? Activity : CompleteProfile) : loginContainer }/> \n                <Route exact path=\"/chat\" component={user !== null  ? (user.complete === 3 ? Chat : CompleteProfile) : loginContainer }/> \n                <Route exact path=\"/notif\" component={user !== null  ? (user.complete === 3 ? Notif : CompleteProfile) : loginContainer }/> \n                <Route exact path=\"/browse\" component={user !== null  ? (user.complete === 3 ? Browse : CompleteProfile) : loginContainer }/> \n                <Route exact path=\"/search\" component={user !== null  ? (user.complete === 3 ? Browse : CompleteProfile) : loginContainer }/>\n                <Route exact path=\"/completeProfile\" component={user !== null  ? CompleteProfile : loginContainer }/> \n\n                <Route path=\"\" component={NotFoundPage}/>\n            </Switch>\n        </>\n    )\n}\nconst mapStateToProps = (state) => (\n{\n    'user': state.user,\n    'notif': state.notif.current_notif\n});\nexport default connect(mapStateToProps)(Routes);","import React, {useEffect} from 'react';\nimport NavBar from '../src/containers/Navbar';\nimport Footer from '../src/components/Footer';\nimport Routes from './Routes/Routes';\nimport socket from './socketConn';\nimport {NewNotif, GetNotif, OpenNotifSuccess} from './actions/notifAction';\n\nfunction App(props) {\n  useEffect(() => {\n    props.store.dispatch(GetNotif());\n    const handleNotif = (data) => {\n      props.store.dispatch(NewNotif(data));\n    }\n    const handleOpenNotif = () => {\n      props.store.dispatch(OpenNotifSuccess());\n    }\n    socket.on('new_notif', handleNotif);\n    socket.on('openedNotif', handleOpenNotif);\n  }, [])\n\n  const handlerFunc =  () =>  {\n    props.store.dispatch({type: \"REJOIN_ROOM\"});\n  }\n  socket.on('connect', handlerFunc);\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Routes />\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import {takeLatest, put,delay} from \"redux-saga/effects\";\nimport {push} from \"react-router-redux\";\nimport {resetState} from '../actions/resetStateAction';\nimport {inscriptionError, inscriptionUserSuccess, EmailConfirmationSuccess, EmailConfirmationError} from \"../actions/registerAction\";\nimport axios from 'axios'\n\nconst inscription =\n  function *inscription ({data}) {\n    try {\n    \n      const response = yield axios.post('http://localhost:5000/register', data)\n      if(response.data.isValid){\n        yield put(inscriptionUserSuccess(data));\n        yield put(push(\"/login\"));\n      }\n      else{\n        if(response.data.errUsername && !response.data.errEmail){\n          yield put(inscriptionError(response.data.errUsername));\n        }\n        else if(response.data.errEmail && !response.data.errUsername){\n          yield put(inscriptionError(response.data.errEmail));\n        }\n        else\n          yield put(inscriptionError('Username and email already exist'));\n      }\n      yield delay(4000);\n      yield put(resetState());\n    }catch (error) {\n      if (error.response) {\n        yield put(inscriptionError(\"error.response.statusText\", \"error.response.status\"));\n      }\n    }\n  };\n\nconst emailConfirm =\nfunction *emailConfirm ({token}) {\n  try {\n    const response = yield axios.post('http://localhost:5000/confirmEmail', {token});\n    if(response.data === 'success')\n    {\n      yield put(EmailConfirmationSuccess());\n    }\n    else if(response.data === 'error')\n    {\n      yield put(EmailConfirmationError());\n    }\n  }catch (error) {\n      if (error.response) {\n        yield put(EmailConfirmationError());\n      }\n    }\n};\n\nexport default function *() {\n  yield takeLatest(\"INSCRIPTION_USER\", inscription);\n  yield takeLatest(\"EMAIL_CONFIRMATION\", emailConfirm);\n}","import axios from \"axios\";\n\nexport const request = (config, token)=> {\n\n  const responsePromise = axios({\n    ...config,\n    \"headers\": {\"Authorization\": token},\n  });\n  return responsePromise;\n};","import {takeLatest, put,call,delay} from \"redux-saga/effects\";\nimport {push} from \"react-router-redux\";\nimport {resetState} from '../actions/resetStateAction';\nimport {loginError, loginUserSuccess,loginErrorField} from \"../actions/loginAction\";\nimport {GetNotif} from '../actions/notifAction'\nimport {updateUserSuccess} from '../actions/userAction'\nimport {request} from './helper';\nimport socket from '../socketConn';\n\nconst login =\n  function *login ({data}) {\n    try {\n    const username = data.username;\n    const password = data.password;\n      const response = yield call(request, {\n        \"url\": \"http://localhost:5000/login\",\n        \"data\": {\n          username,\n          password\n        },\n        \"method\": \"post\"\n      });\n     \n      if(response.data.isValid)\n      {\n        const  user = response.data.user;\n        yield put(loginUserSuccess());\n        yield put(updateUserSuccess(user));\n        \n        socket.emit('join', {id: user.id});\n        if(user.complete === 3){\n          yield put(GetNotif())\n          yield put(push(\"/profile\"));\n        }\n        else\n          yield put(push(\"/completeProfile\"));\n      }\n      else\n      {\n        yield put(loginErrorField(response.data.errorField))\n        yield delay(4000);\n        yield put(resetState());\n      }\n    }catch (error) {\n      if (error.response) {\n        yield put(loginError(\"error.response.statusText\", \"error.response.status\"));\n      }\n    }\n  };\n\nexport default function *() {\n  yield takeLatest(\"LOGIN_USER\", login);\n}","import { LOGOUT_USER, ClearUserInformation } from \"../actions/logoutAction\";\nimport { takeLatest, put,select,call} from \"redux-saga/effects\";\nimport {push} from \"react-router-redux\";\nimport {request} from './helper';\nexport const logoutRequest =\n    function *logoutRequest () {\n        try {\n            const id = yield select((state) => state.user.id);\n            const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/logout\",\n                \"data\": {\n                 id\n                },\n                \"method\": \"post\"\n              },token);\n              if(response)\n              {\n                yield put(ClearUserInformation());\n                yield put(push(\"/login\"));\n              }\n            \n        } catch (error) {\n            console.log(error);\n        }\n    };\n  \nexport default function *() {\n    yield takeLatest(LOGOUT_USER, logoutRequest);\n}","import {takeLatest, put, delay} from \"redux-saga/effects\";\nimport {push} from \"react-router-redux\";\nimport {resetState} from '../actions/resetStateAction';\nimport { ResetPasswordSuccess, ResetPasswordError, SendEmailSuccess, SendEmailError} from \"../actions/resetPasswordAction\";\nimport axios from 'axios';\n\nconst resetPass =\n  function *resetPass ({data}) {\n    try {\n      const response = yield axios.post('http://localhost:5000/resetPassword', {token: data.token, pass: data.form.password, c_pass: data.form.confirmPassword});\n      if(response.data.reset)\n      {\n        yield put(ResetPasswordSuccess());\n      }\n      else\n      {\n        yield put(ResetPasswordError(response.data.error));\n      }\n      yield delay(4000);\n      yield put(resetState());\n      yield put(push('/login'));\n    }catch (error) {\n      if (error.response) {\n        yield put(ResetPasswordError('Error, please retry'));\n      }\n    }\n};\n\nconst sendEmailS =\nfunction *sendEmailS (data) {\n  try {\n    const response = yield axios.post('http://localhost:5000/sendResetEmail', {email: data.data.email});\n    if(response.data.sent)\n    {\n      yield put(SendEmailSuccess());\n    }\n    else if(response.data.error === 'Email not found')\n    {\n      yield put(SendEmailError('Email not found'));\n    }\n    yield delay(4000);\n    yield put(resetState());\n  }catch (error) {\n    if (error.response) {\n      yield put(SendEmailError('Error sending the email, please retry'));\n    }\n  }\n};\n\nexport default function *() {\n  yield takeLatest(\"SEND_EMAIL\", sendEmailS);\n  yield takeLatest(\"RESET_PASSWORD\", resetPass);\n}","import { takeLatest, call,put,select, delay} from \"redux-saga/effects\";\nimport {resetState} from '../actions/resetStateAction';\nimport { getOptionsSuccess, createOptionSuccess, createOptionError, addInfoError, addLocationSuccess} from \"../actions/addInfoAction\";\nimport { updateUserSuccess} from '../actions/userAction';\nimport {request} from './helper';\nconst getSelectOptions =\n  function *getSelectOptions () {\n    try {\n       const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/getOptions\",\n                \"method\": \"post\"\n              },token);  \n        if(response.data)\n        {\n            yield put(getOptionsSuccess(response.data));\n        }\n        else\n        {\n            yield put(getOptionsSuccess());\n        }\n    }catch (error) {\n      if (error.response) {\n        yield put(getOptionsSuccess());\n      }\n    }\n};\n\nconst createSelectOption =\n  function *createSelectOption (act) {\n    try {\n        const id = yield select((state) => state.user.id);\n        const option = act.data.value;\n         const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/createOption\",\n                \"data\": {option: option, id: id},\n                \"method\": \"post\"\n              },token);\n        if(response.data.created)\n        {\n          yield put(createOptionSuccess(response.data.option));\n        }\n        else\n        {\n          yield put(createOptionError(response.data.error));\n        }\n        yield delay(4000);\n        yield put(resetState());\n    }catch (error) {\n      if (error.response) {\n        yield put(createOptionError('there has been an error'));\n      }\n    }\n};\n\nconst add_Info =\n  function *add_Info ({data, id}) {\n    try {\n      const info = {...data, id}\n      const inter = data.interests.map(item => item.value)\n      info.interests = inter;\n       const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/addInfo\",\n                \"data\": info,\n                \"method\": \"post\"\n              },token);\n\n      if(response.data.added)\n      {\n        yield put(updateUserSuccess(response.data.uu));\n      }\n      else\n      {\n        yield put(addInfoError(response.data.error));\n      }\n      yield delay(4000);\n      yield put(resetState());\n    }catch (error) {\n      if (error.response) {\n        yield put(createOptionError('there has been an error'));\n      }\n    }\n};\n\nconst getLocation =\n  function *getLocation () {\n    try {\n      const id = yield select((state) => state.user.id);\n       const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/getLocation\",\n                \"data\": {id: id},\n                \"method\": \"post\"\n              },token);\n      if(response.data)\n      {\n        yield put(addLocationSuccess({marker: response.data.marker, lat: response.data.loc.lat, lng: response.data.loc.lng}));\n      }\n      else\n      {\n        yield put(addInfoError(response.data.error));\n      }\n      yield delay(4000);\n      yield put(resetState());\n    }catch (error) {\n      if (error.response) {\n        yield put(createOptionError('there has been an error'));\n      }\n    }\n};\n\nconst AddLocation =\n  function *AddLocation ({loc}) {\n    try {\n      const id = yield select((state) => state.user.id);\n      const token = yield select((state) => state.user.token);\n      yield call(request, {\n          \"url\": \"http://localhost:5000/addLocation\",\n          \"data\": {id: id, loc},\n          \"method\": \"post\"\n        },token);\n    }catch (error) {\n      if (error.response) {\n        yield put(createOptionError('there has been an error'));\n      }\n      yield delay(4000);\n      yield put(resetState());\n    }\n};\n\nexport default function *() {\n  yield takeLatest(\"GET_OPTIONS\", getSelectOptions);\n  yield takeLatest(\"CREATE_OPTION\", createSelectOption);\n  yield takeLatest(\"ADD_INFO\", add_Info);\n  yield takeLatest(\"GET_LOC\", getLocation);\n  yield takeLatest(\"ADD_LOCATION\", AddLocation);\n}","import { takeLatest,call, put ,select} from \"redux-saga/effects\";\nimport {request} from './helper';\nimport {setProfilePicError,getImages,getImagesSuccess,getImagesError,sendImagesError,delImagesError} from \"../actions/imagesAction\";\n\nconst getPictures =\n  function *getPictures ({user_id}) {\n    try {\n     \n      const token = yield select((state) => state.user.token);\n      const response = yield call(request, {\n                \"url\": \"http://localhost:5000/getImages\",\n                \"data\": {user_id : user_id},\n                \"method\": \"post\"\n              },token);\n        if(response.data.length > 0)\n        {\n            yield put(getImagesSuccess(response.data));\n        }\n       \n    }catch (error) {\n      if (error.response) {\n        yield put(getImagesError(error.response));\n      }\n    }\n};\nconst sendPictures =\n  function *sendPictures ({data}) {\n    try {\n      const user_id = yield select(state => state.user.id);\n      const token = yield select((state) => state.user.token);\n      const response = yield call(request, {\n                \"url\": \"http://localhost:5000/upload\",\n                \"data\": data,\n                \"method\": \"post\"\n              },token);  \n        if(response.data)\n        {\n          yield put(getImages(user_id));\n        }\n       \n    }catch (error) {\n      if (error.response) {\n        yield put(sendImagesError(error.response));\n      }\n    }\n};\nconst delPictures =\n  function *delPictures ({img}) {\n    try {\n      const user_id = yield select(state => state.user.id);\n      const data = {\n        user_id : user_id,\n        img_id : img.imgId,\n        isProfilePic : img.isProfilePic\n    }\n      const token = yield select((state) => state.user.token);\n      const response = yield call(request, {\n                \"url\": \"http://localhost:5000/deleteImages\",\n                \"data\": data,\n                \"method\": \"post\"\n              },token);  \n        if(response.data)\n        {\n          yield put(getImages(user_id));\n        }\n    }catch (error) {\n      if (error.response) {\n        yield put(delImagesError(error.response));\n      }\n    }\n};\nconst setProfilePicture =\n  function *setProfilePicture ({imgId}) {\n    try {\n\n      const user_id = yield select(state => state.user.id);\n      const data = {\n        user_id : user_id,\n        img_id : imgId\n    }\n      const token = yield select((state) => state.user.token);\n      const response = yield call(request, {\n                \"url\": \"http://localhost:5000/setProfilePicture\",\n                \"data\": data,\n                \"method\": \"post\"\n              },token);  \n        if(response.data)\n        {\n          yield put(getImages(user_id));\n        }\n    }catch (error) {\n      if (error.response) {\n        yield put(setProfilePicError(error.response));\n      }\n    }\n};\nexport default function *() {\n    yield takeLatest(\"GET_IMAGES\", getPictures);\n    yield takeLatest(\"SEND_IMAGES\", sendPictures);\n    yield takeLatest(\"DEL_IMAGES\",delPictures);\n    yield takeLatest(\"SET_PROFILE_PIC\",setProfilePicture);\n  }","\nimport {put, takeLatest,call} from \"redux-saga/effects\";\nimport { select } from 'redux-saga/effects'; \nimport {request} from './helper';\nimport { incStepperSuccess} from '../actions/stepperAction';\nexport const Stepper =\n    function *Stepper () {\n        try {\n            const user = yield select(state => state.user);\n            const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/updateStep\",\n                \"data\": {step : user.complete + 1,id : user.id},\n                \"method\": \"post\"\n              },token);\n            if(response)\n            {\n                yield put(incStepperSuccess());\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n  \nexport default function *() {\n    yield takeLatest(\"INC_STEPPER\", Stepper);\n}","import {put, takeLatest,call} from \"redux-saga/effects\";\nimport { select } from 'redux-saga/effects'; \nimport {request} from './helper';\nimport { getUsersSuccess,getUsersError,deleteUser,getBlockUserSuccess,deleteBlock,getLikeUserSuccess,deleteLike, getViewProfileListSuccess, getLikedBySuccess} from '../actions/userAction';\nimport socket from '../socketConn';\n\nexport const getUsers =\n    function *getUsers (data) {\n        try {\n            const user = yield select(state => state.user);\n            const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n            \"url\": \"http://localhost:5000/getUsers\",\n            \"data\": {id : user.id,filtre : data.filtre, indice : data.indice},\n            \"method\": \"post\"\n            },token);\n            if(response)\n            {\n                var oldUsers = yield select ((state) => state.users.users)\n                var newUsers = response.data;\n                var us = null;\n                if(data.indice !== 0)\n                    us = oldUsers.concat(newUsers);\n                else\n                    us = newUsers;\n                yield put(getUsersSuccess(us));\n            }\n            else\n                yield put(getUsersError('there has beetrtn an error'));\n        } catch (error) {\n            yield put(getUsersError('there has been an error1'));\n        }\n    };\nexport const sortUsers =\n    function *sortUsers ({methode,route,indice}) {\n        try {\n            const user = yield select(state => state.user);\n            const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n            \"url\": \"http://localhost:5000/sortUsers\",\n            \"data\": {id : user.id,methode : methode,route : route,indice : indice},\n            \"method\": \"post\"\n            },token);\n            if(response)\n            {\n                var oldUsers = yield select ((state) => state.users.users)\n                var newUsers = response.data;\n                var us = null;\n                if(indice !== 0)\n                        us = oldUsers.concat(newUsers);\n                else\n                    us = newUsers;\n                yield put(getUsersSuccess(us));\n                }\n                else\n                    yield put(getUsersError('there has been an error')); \n\n        } catch (error) {\n            yield put(getUsersError('there has been an error'));\n        }\n    };\nexport const blockUser =\n    function *blockUser({blocked_user_id}) {\n        try {\n            const user = yield select(state => state.user);\n            const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/blockUser\",\n                \"data\": {id : user.id, blocked_user_id: blocked_user_id},\n                \"method\": \"post\"\n              },token);\n            if(response)\n            {\n                yield put(deleteUser(blocked_user_id));\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    };\nexport const deblockUser =\n    function *deblockUser({deblocked_user_id}) {\n        try {\n            const user = yield select(state => state.user);\n            const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/deblockUser\",\n                \"data\": {id : user.id, deblocked_user_id: deblocked_user_id},\n                \"method\": \"post\"\n              },token);\n              if(response)\n              {\n                  yield put(deleteBlock(deblocked_user_id));\n              } \n        } catch (error) {\n            console.log(error)\n        }\n    };\nexport const getBlockUser =\n    function *getBlockUser() {\n        try {\n            const user = yield select(state => state.user);\n            const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/getBlockUser\",\n                \"data\": {id : user.id},\n                \"method\": \"post\"\n              },token);\n            if(response)\n            {\n                yield put(getBlockUserSuccess(response.data));\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    };\nexport const likeUser =\n    function *likeUser({liked_user_id}) {\n        try {\n            const user = yield select(state => state.user);\n            const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/likeUser\",\n                \"data\": {username: user.username, id : user.id, liked_user_id: liked_user_id},\n                \"method\": \"post\"\n              },token);\n            if(response)\n            {\n                const by = {id: user.id, username: user.username, profilePic: user.profilePic};\n                socket.emit('userLiked', {by: by, receiver: parseInt(liked_user_id), content: `${user.username} liked you`});\n                yield put(deleteUser(liked_user_id));\n            }\n        } catch (error) {}\n    };\nexport const dislikeUser =\n    function *dislikeUser({dislike_user_id}) {\n        try {\n            const user = yield select(state => state.user);\n            const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/dislikeUser\",\n                \"data\": {username: user.username, id : user.id, dislike_user_id: dislike_user_id},\n                \"method\": \"post\"\n            },token);\n            if(response)\n            {\n                const by = {id: user.id, username: user.username, profilePic: user.profilePic};\n                socket.emit('userUnliked', {by: by, receiver: parseInt(dislike_user_id), content: `${user.username} unliked you`});\n                yield put(deleteLike(dislike_user_id));\n            }\n        } catch (error){}\n    };\nexport const getLikeUser =\n    function *getLikeUser() {\n        try {\n            const user = yield select(state => state.user);\n            const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/getLikeUser\",\n                \"data\": {id : user.id},\n                \"method\": \"post\"\n              },token);\n            if(response)\n            {\n                yield put(getLikeUserSuccess(response.data));\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    };\nexport const reportUser =\n    function *reportUser({reported_user_id}) {\n        try {\n            const user = yield select(state => state.user);\n            const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/reportUser\",\n                \"data\": {id : user.id, reported_user_id: reported_user_id},\n                \"method\": \"post\"\n              },token);\n            if(response)\n            {\n                yield put(deleteUser(reported_user_id));\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    };\nexport const viewProfileUser =\n    function *viewProfileUser({viewed_user_id}) {\n        try {\n            const user = yield select(state => state.user);\n            const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/viewProfileUser\",\n                \"data\": {username: user.username, id : user.id, viewed_user_id: viewed_user_id},\n                \"method\": \"post\"\n              },token);\n            if(response)\n            {\n                const by = {id: user.id, username: user.username, profilePic: user.profilePic};\n                socket.emit('profileViewed', {by: by, receiver: parseInt(viewed_user_id), content: `${user.username} viewed your profile`});\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\nexport const getViewProfileList =\n    function *getViewProfileList() {\n        try {\n            const user = yield select(state => state.user);\n            const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/getViewProfileList\",\n                \"data\": {id : user.id},\n                \"method\": \"post\"\n              },token);\n            if(response)\n            {\n                yield put(getViewProfileListSuccess(response.data));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\nexport const getLikedBy =\n    function *getLikedBy() {\n        try {\n            const user = yield select(state => state.user);\n            const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": \"http://localhost:5000/getLikedByList\",\n                \"data\": {id : user.id},\n                \"method\": \"post\"\n              },token);\n            if(response)\n            {\n                yield put(getLikedBySuccess(response.data));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\nexport default function *() {\n    yield takeLatest(\"GET_USERS\", getUsers);\n    yield takeLatest(\"BLOCK_USER\",blockUser);\n    yield takeLatest(\"DEBLOCK_USER\",deblockUser);\n    yield takeLatest(\"GET_BLOCK_USER\",getBlockUser);\n    yield takeLatest(\"LIKE_USER\",likeUser);\n    yield takeLatest(\"DISLIKE_USER\",dislikeUser);\n    yield takeLatest(\"DISLIKE_USER_ACT\",dislikeUser);\n    yield takeLatest(\"GET_LIKE_USER\",getLikeUser);\n    yield takeLatest(\"REPORT_USER\",reportUser);\n    yield takeLatest(\"VIEW_PROFILE_USER\",viewProfileUser);\n    yield takeLatest(\"SORT_USERS\",sortUsers);\n    yield takeLatest(\"GET_VP_LIST\",getViewProfileList);\n    yield takeLatest(\"GET_LIKED_BY\", getLikedBy);\n}","import { takeLatest, call,put,select, delay} from \"redux-saga/effects\";\nimport {resetState} from \"../actions/resetStateAction\";\nimport {editInfoError} from \"../actions/profileAction\";\nimport {addInfoError} from \"../actions/addInfoAction\";\nimport { updateUserSuccess} from '../actions/userAction';\nimport {request} from './helper';\n\nconst edit_Info =\nfunction *edit_Info ({data}) {\n    try {\n        const id = yield select((state) => state.user.id);\n        const info = {...data, id}\n        const inter = data.interests.map(item => item.value)\n        info.interests = inter;\n        const token = yield select((state) => state.user.token);\n        const response = yield call(request, {\n                \"url\": \"http://localhost:5000/editProfile\",\n                \"data\": info,\n                \"method\": \"post\"\n              },token);\n        if(response.data.result.valid)\n        {\n            yield put(updateUserSuccess(response.data.uu));\n        }\n        else\n        {\n            yield put(editInfoError(response.data.err));\n        }\n        yield delay(4000);\n        yield put(resetState());\n    }catch (error) {\n        if (error.response) {\n            yield put(addInfoError('there has been an error'));\n        }\n    }\n};\n\nexport default function *() {\n  yield takeLatest(\"EDIT_INFO\", edit_Info);\n}","import {takeLatest, put, select, delay,call} from \"redux-saga/effects\";\nimport {getConverSuccess, getConverError, LoadMessagesSuccess, LoadMessagesError, SendMessageError} from '../actions/chatAction';\nimport { resetChatState } from \"../actions/resetStateAction\";\nimport socket from '../socketConn';\nimport {request} from './helper';\n\n\nconst getConv =\n  function *getConv () {\n    try {\n      const user_id = yield select(state => state.user.id);\n      const data = {user_id : user_id}\n      const token = yield select((state) => state.user.token);\n      const response = yield call(request, {\n          \"url\": \"http://localhost:5000/getMatchs\",\n          \"method\": \"post\",\n          \"data\" : data\n        },token);  \n      if(response.data)\n      {\n        yield put(getConverSuccess(response.data));\n      }\n    }catch (error) {\n      if (error.response) {\n        yield put(getConverError('An error has occured'));\n      }\n    }\n};\n\nconst loadMsg =\n  function *loadMsg ({conv_id}) {\n    try {\n      const user_id = yield select(state => state.user.id);\n      const data = {user_id : user_id, conv_id: conv_id}\n      const token = yield select((state) => state.user.token);\n      const response = yield call(request, {\n          \"url\": \"http://localhost:5000/loadMessages\",\n          \"method\": \"post\",\n          \"data\" : data\n        },token);  \n      if(response.data)\n      {\n        yield put(LoadMessagesSuccess(response.data, conv_id));\n      }\n    }catch (error) {\n      if (error.response) {\n        yield put(LoadMessagesError('An error has occured'));\n      }\n    }\n};\n\nconst sendMsg =\n  function *sendMsg ({id, message}) {\n    try {\n      const user = yield select(state => state.user);\n      const data = {sender : user.id, receiver: id, message: message}\n      const token = yield select((state) => state.user.token);\n      const response = yield call(request, {\n          \"url\": \"http://localhost:5000/sendMessage\",\n          \"method\": \"post\",\n          \"data\" : data\n        },token);  \n      if(response.data.sent === true)\n      {\n        const by = {id: user.id, username: user.username, profilePic: user.profilePic};\n        socket.emit('chatMessage', {by: by, sender: user.id, receiver: data.receiver, profilePic: response.data.profilePic, message: message, content: `${user.username} sent you a message`});\n      }\n      else\n      {\n        yield put(SendMessageError(id, response.data.err));\n        yield delay(4000);\n        yield put(resetChatState());\n      }\n    }catch (error) {\n      if (error.response) {\n        yield put(SendMessageError('An error has occured'));\n      }\n    }\n};\n\nconst reconnect =\n  function *reconnect () {\n    try {\n      const user_id = yield select(state => state.user.id);\n      socket.emit('join', {id: user_id});\n    }catch (error) {\n      if (error.response) {\n        yield put(SendMessageError('An error has occured'));\n      }\n    }\n};\n\nexport default function *() {\n    yield takeLatest(\"GET_CONVERSATIONS\", getConv);\n    yield takeLatest(\"LOAD_MESSAGES\", loadMsg);\n    yield takeLatest(\"SEND_MESSAGE\", sendMsg);\n    yield takeLatest(\"REJOIN_ROOM\", reconnect);\n}","import {takeLatest, put, select, call, delay} from \"redux-saga/effects\";\nimport {request} from './helper';\nimport {resetNotifState} from '../actions/resetStateAction';\nimport {GetNotifSuccess, OpenNotifSuccess} from '../actions/notifAction';\nimport socket from '../socketConn';\n\nconst getNotif =\n  function *getNotif () {\n    try {\n      const user_id = yield select(state => state.user.id);\n      const data = {user_id : user_id}\n      const token = yield select((state) => state.user.token);\n      const response = yield call(request, {\n          \"url\": \"http://localhost:5000/getNotif\",\n          \"method\": \"post\",\n          \"data\" : data\n        },token);\n      if(response.data)\n      {\n        yield put(GetNotifSuccess(response.data));\n      }\n    }catch (error) {\n      if (error.response) {\n\n      }\n    }\n};\n\nconst openNotif =\n  function *openNotif () {\n    try {\n      const user_id = yield select(state => state.user.id)\n      const token = yield select((state) => state.user.token);\n      yield call(request, {\n          \"url\": \"http://localhost:5000/openNotif\",\n          \"method\": \"post\",\n        },token);  \n      yield put(OpenNotifSuccess());\n      socket.emit('openNotif', {id: user_id});\n    }catch (error) {\n      if (error.response) {\n        \n      }\n    }\n};\n\nconst resetNotif =\n  function *resetNotif () {\n    try {\n      yield delay (4000);\n      yield put(resetNotifState());\n    }catch (error) {\n      console.log(error);\n    }\n};\n\nexport default function *() {\n    yield takeLatest(\"GET_NOTIF\", getNotif);\n    yield takeLatest(\"OPEN_NOTIF\", openNotif);\n    yield takeLatest(\"NEW_NOTIF\", resetNotif);\n}","import {fork, all} from \"redux-saga/effects\";\nimport registerSaga from \"./registerSaga\";\nimport loginSaga from './loginSaga';\nimport logoutSaga from \"./logoutSaga\";\nimport resetPasswordSaga from './resetPasswordSaga';\nimport addInfoSaga from './addInfoSaga';\nimport imagesSaga from './imagesSaga';\nimport stepperSaga from './stepperSaga';\nimport usersSaga from './usersSaga'\nimport profileSaga from \"./profileSaga\";\nimport chatSaga from \"./chatSaga\";\nimport notifSaga from \"./notifSaga\";\n\nexport default function *() {\n  yield all([\n    fork(registerSaga),\n    fork(loginSaga),\n    fork(logoutSaga),\n    fork(resetPasswordSaga),\n    fork(addInfoSaga),\n    fork(imagesSaga),\n    fork(stepperSaga),\n    fork(usersSaga),\n    fork(profileSaga),\n    fork(chatSaga),\n    fork(notifSaga),\n  ]);\n}","import {\n  INSCRIPTION_USER,\n  INSCRIPTION_USER_ERROR,\n  INSCRIPTION_USER_SUCCESS,\n  EMAIL_CONFIRMATION,\n  EMAIL_CONFIRMATION_SUCCESS,\n  EMAIL_CONFIRMATION_ERROR,\n} from \"../actions/registerAction\";\nimport {\n  RESET_STATE\n} from '../actions/resetStateAction';\n\nexport default function (state = '', action) {\n  switch (action.type) {\n  case INSCRIPTION_USER:\n    return {registerStatus: 'loading'};\n  case INSCRIPTION_USER_SUCCESS:\n    return {registerStatus: 'success'};\n  case INSCRIPTION_USER_ERROR:\n    return {registerStatus: 'error', error: action.error};\n  case EMAIL_CONFIRMATION:\n    return {emailConfirmation: 'loading'};\n  case EMAIL_CONFIRMATION_SUCCESS:\n    return {emailConfirmation: 'success'};\n  case EMAIL_CONFIRMATION_ERROR:\n    return {emailConfirmation: 'error'};\n    case RESET_STATE :\n      return 'initial state';\n  default:\n    return state;\n  }\n}","import {\n    LOGIN_USER,\n    LOGIN_USER_ERROR,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_ERROR_FIELD,\n} from \"../actions/loginAction\";\n\nimport { CLEAR_USER_INFORMATION } from '../actions/logoutAction'\n\nimport {\n  RESET_STATE\n} from '../actions/resetStateAction';\n\nconst DEFAULT_STATE = {\n  status: 'offline',\n  error: null\n};\n  \nexport default function (state = DEFAULT_STATE, action) {\n    switch (action.type) {\n      case LOGIN_USER:\n        return{\n          status: 'loading',\n          error:null\n        }\n      case LOGIN_USER_SUCCESS:\n\n        return {\n          status:'online',\n          error: null\n        }\n      case LOGIN_USER_ERROR:\n        return {\n          status: 'error',\n          error: action.error,\n        }\n      case LOGIN_USER_ERROR_FIELD:\n        return {\n          status: 'errorField',\n          error: action.errorField,\n        }\n      case CLEAR_USER_INFORMATION:\n        return DEFAULT_STATE\n      case RESET_STATE:\n        return 'initial state';\n      default:\n        return state;\n    }\n}","import {\n  RESET_PASSWORD,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_ERROR,\n  SEND_EMAIL,\n  SEND_EMAIL_SUCCESS,\n  SEND_EMAIL_ERROR,\n} from \"../actions/resetPasswordAction\";\nimport {\n  RESET_STATE\n} from '../actions/resetStateAction';\nexport default function (state = '', action) {\n  switch (action.type) {\n    case RESET_PASSWORD:\n      return {status: 'loading', error: null}\n    case RESET_PASSWORD_SUCCESS:\n    return {status: 'success', error: null}\n    case RESET_PASSWORD_ERROR:\n      return {status: 'error', error: action.error}\n    case SEND_EMAIL:\n      return {status: \"loading\", errors: null}\n    case SEND_EMAIL_SUCCESS:\n      return {status: \"success\", errors: null}\n    case SEND_EMAIL_ERROR:\n      return {status: \"error\", errors: action.error}\n    case RESET_STATE:\n      return 'initial state';\n    default:\n      return state;\n  }\n}","import {\n  GET_OPTIONS,\n  GET_OPTIONS_SUCCESS,\n  CREATE_OPTION,\n  CREATE_OPTION_SUCCESS,\n  CREATE_OPTION_ERROR,\n  ADD_INFO_ERROR,\n} from \"../actions/addInfoAction\";\nimport {EDIT_INFO_ERROR} from \"../actions/profileAction\";\nimport {RESET_STATE} from \"../actions/resetStateAction\";\n\nconst DEFAULT_STATE =  { selectOptions: [], selectLoading: false };\n\nexport default function (state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case GET_OPTIONS:\n      return { selectOptions: [], selectLoading: true };\n    case GET_OPTIONS_SUCCESS:\n      return { selectOptions: action.options, selectLoading: false };\n    case CREATE_OPTION:\n      return { selectOptions: [...state.selectOptions], selectLoading: true };\n    case CREATE_OPTION_SUCCESS:\n      return { selectOptions: [...state.selectOptions, action.option], selectLoading: false };\n    case CREATE_OPTION_ERROR:\n      return { selectOptions: [...state.selectOptions] , selectLoading: false , error: [action.error] };\n    case ADD_INFO_ERROR:\n      return { selectOptions: [...state.selectOptions] , selectLoading: false , error: [action.error] };\n    case EDIT_INFO_ERROR:\n        return { selectOptions: [...state.selectOptions] , selectLoading: false , error: action.error };\n    case RESET_STATE:\n      return {selectOptions: [...state.selectOptions] , selectLoading: false};\n    default:\n      return state;\n  }\n}","import {\n    GET_IMAGES,\n    GET_IMAGES_SUCCESS,\n    GET_IMAGES_ERROR,\n    SEND_IMAGES,\n    SEND_IMAGES_SUCCESS,\n    SEND_IMAGES_ERROR,\n    DEL_IMAGES,\n    DEL_IMAGES_SUCCESS,\n    DEL_IMAGES_ERROR,\n    SET_PROFILE_PIC,\n    SET_PROFILE_PIC_SUCCESS,\n    SET_PROFILE_PIC_ERROR\n} from \"../actions/imagesAction\";\n\nconst DEFAULT_STATE =  {images: [], isImages: false, err : ''};\n\nexport default function (state = DEFAULT_STATE, action) {\n    switch (action.type) {\n        case GET_IMAGES:\n            return { images: null, isImages: false};\n        case GET_IMAGES_SUCCESS:\n            return { images: action.images, isImages: true};\n        case GET_IMAGES_ERROR:\n            return { err : action.err, isImages: false};\n        case SEND_IMAGES:\n            return { images: null ,isImages: false};\n        case SEND_IMAGES_SUCCESS:\n            return { images: action.images, isImages: true};\n        case SEND_IMAGES_ERROR:\n            return { err: action.err, isImages: false};\n        case DEL_IMAGES:\n            return { images: null, isImages: false};\n        case DEL_IMAGES_SUCCESS:\n            return { images: action.images, isImages: true};\n        case DEL_IMAGES_ERROR:\n            return { err: action.err, isImages: false};\n        case SET_PROFILE_PIC:\n            return { images: null, isImages: false};\n        case SET_PROFILE_PIC_SUCCESS:\n            return { images: action.images, isImages: true};\n        case SET_PROFILE_PIC_ERROR:\n            return { err: action.err, isImages: false};\n\n      default:\n        return state;\n    }\n}","import {\n  UPDATE_USER_SUCCESS,\n} from \"../actions/userAction\";\nimport { CLEAR_USER_INFORMATION } from '../actions/logoutAction';\nimport { DEC_STEPPER ,INC_STEPPER_SUCCESS} from \"../actions/stepperAction\";\nimport { ADD_LOCATION_SUCCESS} from \"../actions/addInfoAction\";\n\nexport default function (state = null, action) {\n    switch (action.type) {\n      case UPDATE_USER_SUCCESS:\n        return action.data;\n      case CLEAR_USER_INFORMATION:\n        return null;\n      case DEC_STEPPER:\n        return {...state, complete: state.complete - 1}\n      case INC_STEPPER_SUCCESS:\n        return {...state, complete: state.complete + 1}\n      case ADD_LOCATION_SUCCESS:\n        return {...state, marker: action.loc.marker ,lat: action.loc.lat, long: action.loc.lng}\n      default:\n        return state;\n    }\n}","import {\n    GET_USERS_SUCCESS,\n    GET_USERS_ERROR,\n    DELETE_USER,\n    DISLIKE_USER,   \n\n} from \"../actions/userAction\";\nimport {RESET_STATE_USERS} from \"../actions/resetStateAction\";\nconst DEFAULT_STATE = {\n    status: 'DEFAULT STATE',\n    isUsers: false,\n    users : null,\n    err : null\n  };\nexport default function (state = DEFAULT_STATE, action) {\n    switch (action.type) {\n        case GET_USERS_SUCCESS:{\n             return {status: 'success', isUsers : true, users:action.data};\n        }\n        case GET_USERS_ERROR:\n            return {status: 'error', isUsers : false, err : action.err};\n        case DISLIKE_USER :\n            {\n                const dislike_user_id = action.dislike_user_id;\n                let arr  = [...state.users];\n                for (var i = 0; i < arr.length; i++) {\n                    if (arr[i].user.id === parseInt(dislike_user_id)) {\n                        if(arr[i].user.like === \"iLike\")\n                            arr[i].user.like = null;\n                        else if(arr[i].user.like === \"match\")\n                            arr[i].user.like = 'heLiked';\n                        break ;\n                    }\n                }\n                return {status: 'success', isUsers : true, users : arr};\n            }\n        case DELETE_USER:\n            {\n                const id = action.id;\n                let arr  = [...state.users];\n                for (var j = 0; j < arr.length; j++) {\n                    if (arr[j].user.id === parseInt(id)) {\n                        arr.splice(j, 1);\n                        break ;\n                    }\n                }\n                return {status: 'success', isUsers : true, users : arr};\n            }\n        case RESET_STATE_USERS :\n            return DEFAULT_STATE;\n            \n      default:\n        return state;\n    }\n}","import {\n    GET_BLOCK_USER_SUCCESS,\n    DELETE_BLOCK\n} from \"../actions/userAction\";\nconst DEFAULT_STATE = {\n    isUsers: false,\n    users : null,\n  };\nexport default function (state = DEFAULT_STATE, action) {\n    switch (action.type) {\n        case GET_BLOCK_USER_SUCCESS:\n            return {isUsers : true, users:action.data};\n        case DELETE_BLOCK:\n        {\n            const id = action.id;\n            let arr  = state.users;\n            for (var i = 0; i < arr.length; i++) {\n                if (arr[i].id === parseInt(id)) {\n                    arr.splice(i, 1);\n                    break ;\n                }\n            }\n            return {isUsers : true, users : arr};\n        }\n      default:\n        return state;\n    }\n}","import {\n    GET_LIKE_USER_SUCCESS,\n    DELETE_LIKE,\n    DELETE_USER,\n} from \"../actions/userAction\";\nconst DEFAULT_STATE = {\n    isUsers: false,\n    users : null,\n  };\nexport default function (state = DEFAULT_STATE, action) {\n    switch (action.type) {\n        case GET_LIKE_USER_SUCCESS:\n            return {isUsers : true, users:action.data};\n        case DELETE_LIKE:\n        {\n            const id = action.id;\n            let arr = [];\n            if(state.users)\n                arr = [...state.users];\n            for (var i = 0; i < arr.length; i++) {\n                if (arr[i].id === parseInt(id)) {\n                    arr.splice(i, 1);\n                    i--;\n                }\n            }\n            return {isUsers : true, users : arr};\n        }\n      default:\n        return state;\n    }\n}","import {\n    GET_LIKED_BY_SUCCESS,LIKE_USER,DISLIKE_USER_ACT\n} from \"../actions/userAction\";\nconst DEFAULT_STATE = {\n    isUsers: false,\n    users : null,\n  };\nexport default function (state = DEFAULT_STATE, action) {\n    switch (action.type) {\n        case GET_LIKED_BY_SUCCESS:\n            return {isUsers : true, users:action.data};\n        case LIKE_USER:\n        {\n            const liked_user_id = action.liked_user_id;\n            let arr = [];\n            if(state.users)\n                arr = [...state.users];\n            for (var i = 0; i < arr.length; i++) {\n                if (arr[i].id === parseInt(liked_user_id)) {\n                    if(arr[i].like === 'heLiked')\n                        arr[i].like = \"match\";\n                    break ;\n                }\n            }\n            return {status: 'success', isUsers : true, users : arr};\n        }\n        case DISLIKE_USER_ACT :\n        {\n            const dislike_user_id = action.dislike_user_id;\n            let arr = [];\n            if(state.users)\n                arr = [...state.users];\n            for (var i = 0; i < arr.length; i++) {\n                if (arr[i].id === parseInt(dislike_user_id)) {\n                    if(arr[i].like === \"match\")\n                        arr[i].like = 'heLiked';\n                    break ;\n                }\n            }\n            return {status: 'success', isUsers : true, users : arr};\n        }\n      default:\n        return state;\n    }\n}","import {SELECT_CONVERSATION, LOAD_MESSAGES_SUCCESS, SEND_MESSAGE_SUCCESS, SEND_MESSAGE_ERROR, GET_CONVERSATIONS_SUCCESS, RECEIVE_MESSAGE} from '../actions/chatAction';\nimport { RESET_STATE, RESET_CHAT_STATE } from '../actions/resetStateAction';\n\nconst DEFAULT_STATE = {\n    selectedConversation: {},\n    conversations: [],\n};\n\nexport default function (state = DEFAULT_STATE, action) {\n    \n    switch (action.type) {\n        case GET_CONVERSATIONS_SUCCESS:\n            return {selectedConversation: {...state.selectedConversation},conversations: action.data};\n        case SELECT_CONVERSATION:\n        {\n            const id = action.id;\n            let arr  = [...state.conversations];\n            for (var i = 0; i < arr.length; i++) {\n                if (arr[i].id === parseInt(id)) {\n                    return {selectedConversation: arr[i], conversations:[...state.conversations]};\n                }\n            }\n            break;\n        }\n        case LOAD_MESSAGES_SUCCESS:\n        {\n            const id = action.conv_id;\n            let arr  = [...state.conversations];\n            for (var j = 0; j < arr.length; j++) {\n                if (arr[j].id === parseInt(id)) {\n                    arr[j].messages = action.data;\n                    return {selectedConversation: {...state.selectedConversation, messages: action.data}, conversations:arr};\n                }\n            }\n            break;\n        }\n        case SEND_MESSAGE_SUCCESS:\n        {\n            const id = action.id;\n            const ele = {path: action.profilePic, message: action.message, isMyMessage: true};\n            let arr  = [...state.conversations];\n            for (var k = 0; k < arr.length; k++) {\n                if (arr[k].id === parseInt(id)) {\n                    arr[k].messages && arr[k].messages.push(ele);\n                    break;\n                }\n            }\n            if(state.selectedConversation.id === parseInt(id))\n                return {selectedConversation: {...state.selectedConversation, messages: arr[k].messages}, conversations:arr};\n            else\n                return {selectedConversation: {...state.selectedConversation}, conversations:arr};\n        }\n        case SEND_MESSAGE_ERROR:\n        {\n            return {selectedConversation: {...state.selectedConversation}, conversations:[...state.conversations], err: action.err}\n        }\n        case RECEIVE_MESSAGE:\n        {\n            const id = action.data.sender;\n            const ele = {path: action.data.profilePic, message: action.data.message, isMyMessage: false};\n            let arr  = [...state.conversations];\n            for (var m = 0; m < arr.length; m++) {\n                if (arr[m].id === parseInt(id)) {\n                    arr[m].messages && arr[m].messages.push(ele);\n                    break;\n                }\n            }\n            if(state.selectedConversation.id === parseInt(id))\n                return {selectedConversation: {...state.selectedConversation, messages: arr[m].messages}, conversations:arr};\n            else\n                return {selectedConversation: {...state.selectedConversation}, conversations:arr};\n        }\n        case RESET_CHAT_STATE:\n            return {selectedConversation: {...state.selectedConversation}, conversations: [...state.conversations]};\n        case RESET_STATE:\n            return DEFAULT_STATE;\n        default:\n            return state;\n    }\n}","import {OPEN_NOTIF_SUCCESS, NEW_NOTIF, GET_NOTIF_SUCCESS} from '../actions/notifAction';\nimport { RESET_NOTIF_STATE} from '../actions/resetStateAction';\n\nconst DEFAULT_STATE = {\n    current_notif: '',\n    notifications: [],\n};\n\nexport default function (state = DEFAULT_STATE, action) {\n    switch (action.type) {\n        case OPEN_NOTIF_SUCCESS:\n        {\n            let arr = [...state.notifications];\n            arr.forEach(e => {\n                if(e.seen === 0)\n                    e.seen = 1;\n            });\n            return {current_notif: '', notifications: arr};\n        }\n        case NEW_NOTIF:\n        {\n            let ele = {by: action.data.by, content: action.data.content, seen: 0};\n            let arr  = [...state.notifications];\n            arr.unshift(ele);\n            return {current_notif: action.data.content, notifications: arr};\n        }\n        case GET_NOTIF_SUCCESS:\n        {\n            return {current_notif: '', notifications: action.notif};\n        }\n        case RESET_NOTIF_STATE:\n            return {current_notif: '', notifications: [...state.notifications]};\n        default:\n            return state;\n    }\n}","import {\n    GET_VP_LIST_SUCCESS, LIKE_USER,DISLIKE_USER_ACT,\n} from \"../actions/userAction\";\nconst DEFAULT_STATE = {\n    isUsers: false,\n    users : null,\n};\nexport default function (state = DEFAULT_STATE, action) {\n    switch (action.type) {\n        case GET_VP_LIST_SUCCESS:\n            return {isUsers : true, users:action.data};\n        case LIKE_USER:\n        {\n            const liked_user_id = action.liked_user_id;\n            let arr = [];\n            if(state.users)\n                arr = [...state.users];\n            for (var i = 0; i < arr.length; i++) {\n                if (arr[i].id === parseInt(liked_user_id)) {\n                    if(arr[i].like === null)\n                        arr[i].like = \"iLike\";\n                    else if(arr[i].like === 'heLiked')\n                        arr[i].like = \"match\";\n                    break ;\n                }\n            }\n            return {status: 'success', isUsers : true, users : arr};\n        }\n        case DISLIKE_USER_ACT :\n        {\n            const dislike_user_id = action.dislike_user_id;\n            let arr = [];\n            if(state.users)\n                arr = [...state.users];\n            for (var i = 0; i < arr.length; i++) {\n                if (arr[i].id === parseInt(dislike_user_id)) {\n                    if(arr[i].like === \"iLike\")\n                        arr[i].like = null;\n                    else if(arr[i].like === \"match\")\n                        arr[i].like = 'heLiked';\n                    break ;\n                }\n            }\n            return {status: 'success', isUsers : true, users : arr};\n        }\n      default:\n        return state;\n    }\n}","import { connectRouter } from \"connected-react-router\";\nimport registerReducer from \"./registerReducer\";\nimport loginReducer from \"./loginReducer\";\nimport {combineReducers} from \"redux\";\nimport {reducer as form} from \"redux-form\";\nimport resetPasswordReducer from \"./resetPasswordReducer\";\nimport addInfoReducer from './addInfoReducer';\nimport imagesReducer from './imagesReducers';\nimport userReducer from './userReducer';\nimport usersReducer from './usersReducer';\nimport blockList from './blockList';\nimport likeList from './likeList';\nimport likedByList from './likedByList';\nimport chat from './chatReducer';\nimport notif from './notifReducer';\nimport viewProfileList from './viewProfileList';\n\nconst combinedReducer = (history)=> combineReducers({\n    \"router\" : connectRouter(history),\n    \"register\" : registerReducer,\n    \"login\": loginReducer,\n    \"user\" : userReducer,\n    \"users\" : usersReducer,\n    \"resetPassword\": resetPasswordReducer,\n    \"addInfo\" : addInfoReducer,\n    \"images\" : imagesReducer,\n    \"blockList\" : blockList,\n    \"likeList\" : likeList,\n    \"likedByList\": likedByList,\n    \"viewProfileList\": viewProfileList,\n    \"chat\": chat,\n    \"notif\": notif,\n    form\n});\nexport default combinedReducer;","import {applyMiddleware, compose, createStore} from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./reducers\";\nimport {createBrowserHistory} from \"history\";\nimport {routerMiddleware} from \"connected-react-router\";\nimport {persistReducer} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nexport const history = createBrowserHistory();\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst persistConfig = {\n  \"key\": \"use-app\",\n  storage: storage,\n  whitelist: \"user\",\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\n\nexport default function configureStore (initialState) {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(\n    persistedReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware))\n  );\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    module.hot.accept(\"./reducers\", () => {\n      store.replaceReducer(rootReducer(history));\n    });\n  }\n  return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux'\n\nimport configureStore, {history} from './store'\nimport { ConnectedRouter } from 'connected-react-router';\nimport {persistStore} from \"redux-persist\";\nimport {PersistGate} from \"redux-persist/lib/integration/react\";\n\nconst  store = configureStore();\nconst persistor = persistStore(store);\nReactDOM.render(\n\n\n<Provider store = {store}>\n    <PersistGate loading={null} persistor={persistor}>\n        <ConnectedRouter history={history}>\n            <App store={store}/>\n        </ConnectedRouter>\n    </PersistGate>\n</Provider>\n\n, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}